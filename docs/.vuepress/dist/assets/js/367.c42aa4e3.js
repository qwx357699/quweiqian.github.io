(window.webpackJsonp=window.webpackJsonp||[]).push([[367],{735:function(r,e,n){"use strict";n.r(e);var a=n(10),t=Object(a.a)({},(function(){var r=this,e=r._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[e("h1",{attrs:{id:"arraybuffer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arraybuffer"}},[r._v("#")]),r._v(" ArrayBuffer")]),r._v(" "),e("h2",{attrs:{id:"创建arraybuffer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建arraybuffer"}},[r._v("#")]),r._v(" 创建ArrayBuffer")]),r._v(" "),e("p",[e("strong",[r._v("ArrayBuffer：一个对象，用于存储一块固定内存大小的数据。")])]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("\nnew ArrayBuffer(字节数)\n\n")])])]),e("p",[e("strong",[r._v("可以通过属性")]),e("code",[r._v("byteLength")]),r._v("得到字节数，可以通过方法 "),e("code",[r._v("slice")]),r._v("得到新的ArrayBuffer")]),r._v(" "),e("blockquote",[e("p",[e("code",[r._v("slice")]),r._v("相当于把第一个buffer内容复制到另一个内存空间")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("// 创建一个用于存储10个字节的内存空间\nconst buffer = new ArrayBuffer(10);\n// 从下标为3的字节开始取，包括下标为3的字节，\n// 直到到下标为5的字节，不包括下标为5的字节[3,5)\nconst buffer2 = buffer.slice(3, 5);\nconsole.log(buffer, buffer2);\n")])])])]),r._v(" "),e("h2",{attrs:{id:"读写arraybuffer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#读写arraybuffer"}},[r._v("#")]),r._v(" 读写ArrayBuffer")]),r._v(" "),e("ol",[e("li",[e("strong",[r._v("使用DataView")])])]),r._v(" "),e("p",[e("strong",[r._v("通常会在需要混用多种存储格式时使用DataView")])]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("/*\n* @Description: view 有3个参数：buffer byteLength byteOffset\n* @Param: buffer 表示操作的buffer内存\n* @Param: byteLength 操作的buffer字节长度\n* @Param: byteOffset 表示字节的偏移量(下标)，不能超过buffer的字节长度，超过报错\n*/\n const buffer = new ArrayBuffer(10);\n //0 0 0 (0 0 0 0) 0 0 0\n const view = new DataView(buffer,3,4);\n // 写入数据以set开头的方法\n // 操作的是view中的数据，(0 0 0 0)=>(0 3 0 0)\n // 0 0 0 (0 3 0 0) 0 0 0\n view.setInt8(1,3);\n // 用Int16表示按照1个字节偏移,按照16位修改，锁定了（3 0）这块内存\n// [0011 0000 ]=>[0000 0100]=>(0 4),\n// 主意看：这里改变的4的位置 (0 3 0 0)=>(0 3 4 0)\n // 0 0 0 (0 0 4 0) 0 0 0\n // 这也就是DataView用的少的原因，能混用容易出错\n view.setInt16(1,4);\n // 读数据以get开头的方法\n // 读取偏移量为1的数据\n view.getInt8(1); //（3）[0000 0011]=>3\n // (3,0) [0000 0011 0000 0000]=>768\n console.log(view.getInt16(1));\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[e("strong",[r._v("使用类型化数组")])])]),r._v(" "),e("p",[r._v("**实际上，每一个类型化数组都对应一个ArrayBuffer，如果没有手动指定ArrayBuffer，类型化数组创建时，会新建一个ArrayBuffer(**"),e("em",[r._v("意味着可以将buffer给类型数组")]),r._v(")")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("//创建 10个字节的内存\nconst bf = new ArrayBuffer(10);\nconst arr1 = new Int8Array(bf);\nconst arr2 = new Int16Array(bf);\n// 表示他们操作的是同一块内存\nconsole.log(bf === arr1.buffer); // true\n// 不同的类型化数组不一样\nconsole.log(arr1 === arr2); // false\n// 意味着我们可以使用不同的类型化数组操作同一块内存\nconsole.log(arr1.buffer === arr2.buffer); //true\n// 怎么操作呢？很简单\narr1[0] = 10;\nconsole.log(arr1);\nconsole.log(arr2); // arr2 中的buffer也跟着变了\n// 大部分的时候使用一种类型数组操作内存空间，否则就和 view 一样了\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("//创建 10个字节的内存\nconst bf2 = new ArrayBuffer(8);\nconst arr2 = new Int32Array(bf2);\narr2[0] = 123454682;\nconsole.log(arr2);\n// 二级制原始数据是由高到低位,数组下标是从0开始逐渐增大，因此将二级制低位放到数组首位开始比较合理，\n// 由于计算机最小存储单位是1byte,因此将二进制原始数据按照末尾每8位取一次\n//原始：      0000 0111 0101 1011 1100 0100 1101 1010\n//推导的8位   1101 1010 1100 0100 0101 1011 0000 0111 \n//int8 [-38 -60 91 7 0 0 0 0] ok 的\n//-38: 1010 0110 反码：1101 1001 补码：1101 1010\n//-60: 1011 1100 反码：1100 0011 补码：1100 0100\n// 91: 0101 1011\n//  7: 0000 0111\n// Int16 [ -15142 1883 0 0] 这里值从int8的基础上，按照16取出，每去一次将两个字节位置还交换一下\n// -15142: 1011 1011 0010 0110 反码：1100 0100 1101 1001 补码：1100 0100 1101 1010 \n//    调换位置：1101 1010 1100 0100\n// 1883: 0000 0111 0101 1011\n//    调换位置: 0101 1011 0000 0111\n")])])])])}),[],!1,null,null,null);e.default=t.exports}}]);