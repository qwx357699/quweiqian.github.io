(window.webpackJsonp=window.webpackJsonp||[]).push([[459],{828:function(t,v,_){"use strict";_.r(v);var a=_(10),r=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[t._v("标准库（标准API）")]),t._v(" "),v("ul",[v("li",[t._v("库：liberary")]),t._v(" "),v("li",[t._v("API：应用程序编程接口，Application Programing Interface")]),t._v(" "),v("li",[t._v("标准：ECMAScript标准")])]),t._v(" "),v("h2",{attrs:{id:"object"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#object"}},[t._v("#")]),t._v(" Object")]),t._v(" "),v("h3",{attrs:{id:"静态成员"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#静态成员"}},[t._v("#")]),t._v(" 静态成员")]),t._v(" "),v("ul",[v("li",[t._v("keys(某个对象)，得到某个对象的所有属性名数组")]),t._v(" "),v("li",[t._v("values(某个对象)，得到某个对象的所有属性值数组")]),t._v(" "),v("li",[t._v("entries(某个对象)，得到某个对象的所有属性名和属性值的数组")])]),t._v(" "),v("h3",{attrs:{id:"实例成员"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#实例成员"}},[t._v("#")]),t._v(" 实例成员")]),t._v(" "),v("blockquote",[v("p",[t._v("实例成员可以被重写")])]),t._v(" "),v("p",[v("strong",[t._v("所有对象，都拥有Object的所有实例成员")])]),t._v(" "),v("ul",[v("li",[t._v("toString方法：得到某个对象的字符串格式")])]),t._v(" "),v("p",[t._v('默认情况下，该方法返回"[object Object]";')]),t._v(" "),v("ul",[v("li",[t._v("valueOf方法：得到某个对象的值")])]),t._v(" "),v("p",[t._v("默认情况下，返回该对象本身")]),t._v(" "),v("blockquote",[v("p",[t._v("在JS中，当自动的进行类型转换时，如果要对一个对象进行转换，实际上是先调用对象的valueOf方法，然后调用返回结果的toString方法，将得到的结果进行进一步转换。")])]),t._v(" "),v("h2",{attrs:{id:"function"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#function"}},[t._v("#")]),t._v(" Function")]),t._v(" "),v("p",[v("strong",[t._v("所有函数都具有Function中的实例成员")])]),t._v(" "),v("p",[v("strong",[t._v("语法：arguments：在函数中使用，获取该函数调用时，传递的所有参数")])]),t._v(" "),v("p",[v("strong",[t._v("arguments是一个类数组（也称为伪数组：没有通过Array构造函数创建的类似于数组结构的对象），伪数组会缺少大量的数组实例方法")])]),t._v(" "),v("p",[v("strong",[t._v("arguments数组中的值，会与对应的形参映射")])]),t._v(" "),v("h3",{attrs:{id:"实例成员-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#实例成员-2"}},[t._v("#")]),t._v(" 实例成员")]),t._v(" "),v("ul",[v("li",[t._v("length属性，得到函数形参数量")]),t._v(" "),v("li",[t._v("apply方法：调用函数，同时指定函数中的this指向，参数以数组传递")]),t._v(" "),v("li",[t._v("call方法：调用函数，同时指定函数中的this指向，参数以列表传递")]),t._v(" "),v("li",[t._v("bind方法：得到一个新函数，该函数中的this始终指向指定的值。")])]),t._v(" "),v("p",[t._v("通常，可以利用apply、call方法，将某个伪数组转换伪真数组。")])])}),[],!1,null,null,null);v.default=r.exports}}]);