(window.webpackJsonp=window.webpackJsonp||[]).push([[429],{800:function(t,v,a){"use strict";a.r(v);var _=a(10),s=Object(_.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"数组"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),v("p",[t._v("数组用于存放多个数据")]),t._v(" "),v("h2",{attrs:{id:"创建一个数组"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#创建一个数组"}},[t._v("#")]),t._v(" 创建一个数组")]),t._v(" "),v("ol",[v("li",[t._v("new Array(长度)")])]),t._v(" "),v("p",[t._v("长度，数组里面的数据总数，长度一定是一个非负整数")]),t._v(" "),v("p",[t._v("new Array(数据, 数据, 数据....)")]),t._v(" "),v("p",[t._v("创建一个数组，并初始化其每一项的值")]),t._v(" "),v("p",[t._v("数组项：数组其中的一项数据")]),t._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[t._v("[数据,数据,数据,....]")])]),t._v(" "),v("p",[t._v("创建一个数据，并初始化其每一项的值")]),t._v(" "),v("h2",{attrs:{id:"认识数组的本质"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#认识数组的本质"}},[t._v("#")]),t._v(" 认识数组的本质")]),t._v(" "),v("p",[t._v("数组的本质是一个对象")]),t._v(" "),v("ul",[v("li",[t._v("length属性：数组的长度，会自动变化，值为最大下标+1")]),t._v(" "),v("li",[t._v("数字字符串属性：叫做下标，也叫做索引，相当于数组中每个数据的编号，下标从0开始排列")])]),t._v(" "),v("p",[t._v("连续下标的取值范围：0 ~ length -1，如果给length直接赋值，会导致数组可能被截断")]),t._v(" "),v("p",[t._v("实际开发中，不要给length赋值。")]),t._v(" "),v("h2",{attrs:{id:"下标"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#下标"}},[t._v("#")]),t._v(" 下标")]),t._v(" "),v("p",[t._v("通常情况下，下标是连续的。")]),t._v(" "),v("p",[t._v("下标不连续的数组，叫做稀松数组。")]),t._v(" "),v("h2",{attrs:{id:"数组的常见操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数组的常见操作"}},[t._v("#")]),t._v(" 数组的常见操作")]),t._v(" "),v("h3",{attrs:{id:"添加数组项"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#添加数组项"}},[t._v("#")]),t._v(" 添加数组项")]),t._v(" "),v("ul",[v("li",[t._v("数组[长度] = 数据：向数组末尾添加一个数据")]),t._v(" "),v("li",[t._v("数组.push(数据): 向数组末尾添加一个数据")]),t._v(" "),v("li",[t._v("数组.unshift(数据)：向数组起始位置添加一个数据，会导致数组每一项的下标向后移动")]),t._v(" "),v("li",[t._v("数组.splice(下标, 0, 添加的数据): 从指定下标位置开始，删除0个，然后在该位置插入添加的数据，如果下标超过范围，则按照范围的边界进行处理。")])]),t._v(" "),v("p",[t._v("push、unshift、splice可以添加多个数据")]),t._v(" "),v("h3",{attrs:{id:"删除数据"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#删除数据"}},[t._v("#")]),t._v(" 删除数据")]),t._v(" "),v("ul",[v("li",[t._v("delete 数组[下标]: 这种做法不会导致数组其他的属性发生变化，因此，该做法会导致产生稀松数组，所以不推荐使用该做法。")]),t._v(" "),v("li",[t._v("数组.pop(): 删除数组的最后一项，该表达式返回最后一项的数据")]),t._v(" "),v("li",[t._v("数组.shift()：删除数组第一项，该表达式返回第一项的数据")]),t._v(" "),v("li",[t._v("数组.splice(下标, 删除的数量, 添加的数据): 从指定下标位置开始，删除指定数量，然后在该位置插入添加的数据，如果下标超过范围，则按照范围的边界进行处理。返回一个新数组，该数组记录被删除的数据。")])]),t._v(" "),v("h3",{attrs:{id:"其他操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#其他操作"}},[t._v("#")]),t._v(" 其他操作")]),t._v(" "),v("ul",[v("li",[t._v("数组.slice(起始位置下标, 结束位置下标)：将起始位置到结束位置之间的数据拿出来，得到一个新的数组，该函数不会改变原数组；注意：结束下标取不到")])]),t._v(" "),v("p",[t._v("下标可以写负数，如果是负数，则从数组的末尾开始计算。")]),t._v(" "),v("p",[t._v("如果不写结束下标，则直接取到末尾。")]),t._v(" "),v("ul",[v("li",[t._v("数组清空")])]),t._v(" "),v("p",[t._v("数组.splice(0, 数组.length);")]),t._v(" "),v("p",[t._v("数组.length = 0;")]),t._v(" "),v("ul",[v("li",[t._v("查找数组中某一项的下标")])]),t._v(" "),v("p",[t._v("数组.indexOf(数据)")]),t._v(" "),v("p",[t._v("从数组中依次查找对应的数据，查找时使用严格相等进行比较。找到第一个匹配的下标，返回。如果没有找到，则得到-1；")]),t._v(" "),v("p",[t._v("数组.lastIndexOf(数据)")]),t._v(" "),v("p",[t._v("功能和indexOf类似，只是查找的是最后一个匹配的下标")]),t._v(" "),v("ul",[v("li",[t._v("数组.fill")])]),t._v(" "),v("p",[t._v("数组.fill(数据)：将数组的所有项，填充为指定的数据")]),t._v(" "),v("p",[t._v("数组.fill(数组, 开始下标): 将数组从开始下标起，到数组的末尾，填充为指定的数据")]),t._v(" "),v("p",[t._v("数组.fill(数组, 开始下标，结束下标): 将数组从开始下标起，到数组的结束下标（取不到），填充为指定的数据")]),t._v(" "),v("h2",{attrs:{id:"语法补充"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#语法补充"}},[t._v("#")]),t._v(" 语法补充")]),t._v(" "),v("h3",{attrs:{id:"in关键字"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#in关键字"}},[t._v("#")]),t._v(" in关键字")]),t._v(" "),v("p",[t._v("判断某个属性在对象中是否存在")]),t._v(" "),v("p",[t._v("属性名 in 对象")]),t._v(" "),v("h3",{attrs:{id:"for-in-foreach-循环"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#for-in-foreach-循环"}},[t._v("#")]),t._v(" for-in  foreach 循环")]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" prop "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" 对象"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//循环体")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),v("p",[t._v("取出对象的所有属性名，每次循环将其中一个属性名赋值给变量prop，运行循环体。")])])}),[],!1,null,null,null);v.default=s.exports}}]);