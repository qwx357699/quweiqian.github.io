(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{460:function(t,e,a){"use strict";a.r(e);var v=a(10),i=Object(v.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"meta-viewport"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#meta-viewport"}},[t._v("#")]),t._v(" Meta viewport")]),t._v(" "),e("p",[t._v("本页包含了我对 "),e("strong",[t._v("meta viewport")]),t._v(" 标签中各种指令的测试。")]),t._v(" "),e("p",[t._v("@viewport结构不是本研究的一部分。当我知道它应该如何表现时，我会逐步加入它。")]),t._v(" "),e("h2",{attrs:{id:"the-meta-viewport-tag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-meta-viewport-tag"}},[t._v("#")]),t._v(" The meta viewport tag")]),t._v(" "),e("p",[e("code",[t._v("meta viewport tag")]),t._v("包含有关视口和缩放的浏览器指令("),e("em",[t._v("instructions")]),t._v(")。特别是，它允许web开发人员设置"),e("strong",[t._v("layout viewport")]),t._v("的宽度，而CSS声明(如width: 20%)是根据这个宽度来计算的。")]),t._v(" "),e("p",[e("code",[t._v("meta viewport")]),t._v(" 有以下语法:")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("viewport"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("name=value,name=value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("h2",{attrs:{id:"directives"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#directives"}},[t._v("#")]),t._v(" Directives")]),t._v(" "),e("p",[t._v("每一对"),e("code",[t._v("name/value")]),t._v("都是一个指令。(这个词是我自己发明的。)总共有六个:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("width")]),t._v("。设置"),e("em",[t._v("layout viewport")]),t._v("的宽度。")]),t._v(" "),e("li",[e("code",[t._v("initial-scale")]),t._v("。设置页面的初始缩放和"),e("em",[t._v("layout viewport")]),t._v("的宽度。")]),t._v(" "),e("li",[e("code",[t._v("minimum-scale")]),t._v("。设置最小缩放级别(即用户可以缩小多少)。")]),t._v(" "),e("li",[e("code",[t._v("maximum-scale")]),t._v("。设置最大缩放级别(即用户可以放大多少)。")]),t._v(" "),e("li",[e("code",[t._v("height")]),t._v("。应该是设置"),e("em",[t._v("layout viewport")]),t._v("的高度。它在任何地方都不支持。")]),t._v(" "),e("li",[e("code",[t._v("user-scalable")]),t._v("。当设置为"),e("code",[t._v("no")]),t._v("时，将阻止用户缩放。这是一种令人憎恶的东西，绝对不能使用")])]),t._v(" "),e("h2",{attrs:{id:"device-width-value"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#device-width-value"}},[t._v("#")]),t._v(" device-width value")]),t._v(" "),e("p",[t._v("对于"),e("code",[t._v("width")]),t._v("指令，有一个特殊的值:"),e("code",[t._v("device-width")]),t._v("。它将"),e("em",[t._v("layout viewport")]),t._v("宽度设置为"),e("em",[t._v("ideal viewport")]),t._v("宽度。")]),t._v(" "),e("p",[t._v("理论上有一个类似的 "),e("code",[t._v("device-height")]),t._v(" 度值，但它似乎不起作用。")]),t._v(" "),e("h2",{attrs:{id:"the-three-viewports"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-three-viewports"}},[t._v("#")]),t._v(" The three viewports")]),t._v(" "),e("p",[t._v("很久以前我就报道过手机浏览器有两个视口:"),e("code",[t._v("visual viewport")]),t._v("和"),e("code",[t._v("layout viewport")]),t._v("。如有必要，请重读这篇"),e("a",{attrs:{href:"https://www.quirksmode.org/mobile/viewports2.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("文章"),e("OutboundLink")],1),t._v(";在接下来的内容中，我假定您了解过这两个视口。")]),t._v(" "),e("h2",{attrs:{id:"the-ideal-viewport"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-ideal-viewport"}},[t._v("#")]),t._v(" The ideal viewport")]),t._v(" "),e("p",[t._v("事实证明，还有第三个视口，我决定称之为"),e("strong",[t._v("ideal viewport")]),t._v("。它提供了设备上网页的理想大小。因此，理想视口的尺寸因设备而异。")]),t._v(" "),e("p",[t._v("在老式或廉价的非视网膜屏幕设备上，理想的视口等于物理像素数，但这不是要求。具有更高物理像素密度的较新设备可以很好地保留旧的理想视口，因为它非常适合该设备。")]),t._v(" "),e("p",[t._v("直到iPhone 4S, iPhone理想的视口是320x480，不管它是否有视网膜屏幕。这是因为320x480是iphone上网页的理想尺寸。")]),t._v(" "),e("p",[t._v("关于理想的视口有两件重要的事情:")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("layout viewport")]),t._v("可以被设置为"),e("code",[t._v("ideal viewport")]),t._v("的值。"),e("code",[t._v("width=device-width")]),t._v("和"),e("code",[t._v("initial-scale=1")]),t._v("指令就是这样做的。")]),t._v(" "),e("li",[t._v("**所有的缩放指令都是相对于理想视口的，而不是布局视口的宽度。**所以"),e("code",[t._v("maximum-scale=3")]),t._v("意味着最大缩放是理想视口的300%。")])]),t._v(" "),e("h2",{attrs:{id:"finding-the-ideal-viewport-dimensions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#finding-the-ideal-viewport-dimensions"}},[t._v("#")]),t._v(" Finding the ideal viewport dimensions")]),t._v(" "),e("p",[t._v("能够读出理想的视口尺寸有时可能会很有用。运气不好。")]),t._v(" "),e("p",[t._v("你可以给一个页面设置以下元标签，读出"),e("code",[t._v("document.documentElement.clientWidth/Height")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("viewport"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("width=device-width,initial-scale=1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[t._v("如果这不是一个选项，你就无法读出理想的视口尺寸。我希望"),e("code",[t._v("screen.width/height")]),t._v("在这里可能会有所帮助，但只有BlackBerry提供了正确的信息。其他浏览器则求助于各种各样的无用之处。")]),t._v(" "),e("p",[t._v("公开问题："),e("code",[t._v("screen.width/height")]),t._v("是否应该给出理想的视口尺寸？")]),t._v(" "),e("p",[t._v("赞成：属性最终会包含有用的信息。")]),t._v(" "),e("p",[t._v("缺点：理想的视口大小并不一定等同于设备上的物理像素。")]),t._v(" "),e("h2",{attrs:{id:"compatibility-ideal-viewport"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compatibility-ideal-viewport"}},[t._v("#")]),t._v(" Compatibility - ideal viewport")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://qwq9527.gitee.io/resource/imgs/1698475248729.png",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"layout-viewport-width"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layout-viewport-width"}},[t._v("#")]),t._v(" Layout viewport width")]),t._v(" "),e("p",[t._v("在渲染页面之前，浏览器需要知道布局视口("),e("em",[t._v("layout viewport")]),t._v(")有多宽。布局视口("),e("em",[t._v("layout viewport")]),t._v(")和CSS的声明有关，如"),e("code",[t._v("width:20%")]),t._v("("),e("em",[t._v("CSS属性值计算")]),t._v(")。")]),t._v(" "),e("p",[t._v("不需任何进一步的介绍，浏览器自己选择宽度。在测试的8个浏览器中，有6个是980px，在黑莓和IE10中是1024px。这里没有对错之分;这只是浏览器供应商做出的选择。")]),t._v(" "),e("p",[t._v("当你在meta viewport标签中使用"),e("code",[t._v("width=400")]),t._v("或其他数值时，布局视口("),e("em",[t._v("layout viewport")]),t._v(")的宽度被设置为该值。我们已经知道了。")]),t._v(" "),e("p",[t._v("然而，Android WebKit和IE的最小视口是320px。当你设置低于320px时，它们会恢复到理想的视口宽度。")]),t._v(" "),e("p",[t._v("还有一种情况是布局视口与理想视口相等。当您执行"),e("code",[t._v("width=device-width")]),t._v("或"),e("code",[t._v("initial-scale=1")]),t._v("时，就会发生这种情况。这很复杂，因为Safari和IE10中存在漏洞，而且使用初始缩放有一个陷阱，但这是一般规则。")]),t._v(" "),e("h2",{attrs:{id:"minimum-and-maximum-dimensions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#minimum-and-maximum-dimensions"}},[t._v("#")]),t._v(" Minimum and maximum dimensions")]),t._v(" "),e("p",[t._v("布局视口的最大宽度是"),e("strong",[t._v("10,000px")]),t._v("。我不完全相信这个数字，因为浏览器不允许缩小到这个数字。不过，目前我接受这个官方给定的值。")]),t._v(" "),e("p",[t._v("布局视口的最小宽度"),e("strong",[t._v("约为理想视口的1/10")]),t._v("，这也是最大缩放级别。(即布局视口永远不会小于最小可视视口。)例外:Android WebKit和IE，它们从不低于320px。")]),t._v(" "),e("blockquote",[e("ul",[e("li",[e("em",[t._v("chrome调试工具中对提供的iphoneXR等机型测试发现，布局视口的最小宽度约为理想视口的2/10,也就占理想视口的20%宽度，后续发现：没有设置max-scale=10，设置后比例的确是1/10，那就意味着浏览器默认给了max-scale=5")])]),t._v(" "),e("li",[e("em",[t._v("最小可视窗口理解：缩放后的 layout viewport 最小宽度就是最小 visable viewport 宽度，到了这个级别，无法再缩放了")])])])]),t._v(" "),e("h2",{attrs:{id:"compatibility-layout-viewport"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compatibility-layout-viewport"}},[t._v("#")]),t._v(" Compatibility - layout viewport")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://qwq9527.gitee.io/resource/imgs/1698478860504.png",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"zoom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zoom"}},[t._v("#")]),t._v(" Zoom")]),t._v(" "),e("p",[t._v("缩放很棘手。理论上，这听起来很简单：确定用户可以放大或缩小的缩放因子。问题有两个方面：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("我们无法直接读出缩放因子。相反，我们必须读出视觉视口("),e("em",[t._v("visual viewport")]),t._v(")的宽度，视觉视口("),e("em",[t._v("visual viewport")]),t._v(")宽度与缩放因子成反比。缩放因子越大，视觉视口宽度就越小。")]),t._v(" "),e("p",[t._v("因此，最小缩放因子决定了最大视觉视口宽度，反之亦然。")])]),t._v(" "),e("li",[e("p",[t._v("事实证明，所有"),e("strong",[t._v("缩放因子都是相对于理想视口的")]),t._v("，无论当前布局视口的大小是多少。")])])]),t._v(" "),e("p",[t._v("然后是名字的问题。在苹果公司的说法中，"),e("code",[t._v("zoom")]),t._v("就是*"),e("code",[t._v("scale")]),t._v("*，因此"),e("code",[t._v("meta viewport")]),t._v("指令被称为"),e("code",[t._v("initial-scale")]),t._v(", "),e("code",[t._v("minimum-scale")]),t._v(", 和"),e("code",[t._v("maximum-scale")]),t._v("。其他浏览器被迫遵守，以保持与iPhone特定网站的兼容性。")]),t._v(" "),e("p",[t._v("这三个指令需要一个缩放系数，例如2表示“缩放到理想视口宽度的200%”。")]),t._v(" "),e("h2",{attrs:{id:"formulas-公式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#formulas-公式"}},[t._v("#")]),t._v(" Formulas("),e("em",[t._v("公式")]),t._v(")")]),t._v(" "),e("p",[t._v("让我们先定义一下公式:")]),t._v(" "),e("div",{staticClass:"language-tex extra-class"},[e("pre",{pre:!0,attrs:{class:"language-tex"}},[e("code",[t._v("visual viewport width = ideal viewport width / zoom factor\nzoom factor = ideal viewport width / visual viewport width\n")])])]),e("p",[t._v("因此，理想的视口宽度为320px，缩放系数为2，我们得到的可视视口宽度为160px。布局视口的宽度在此计算中不起作用。")]),t._v(" "),e("h2",{attrs:{id:"minimum-and-maximum-zoom-factors"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#minimum-and-maximum-zoom-factors"}},[t._v("#")]),t._v(" Minimum and maximum zoom factors")]),t._v(" "),e("p",[t._v("浏览器支持的最小和最大缩放因子是什么?")]),t._v(" "),e("p",[t._v("第一，限制。视觉视口永远不会比布局视口宽，因此在大多数实际情况下，最小缩放因子是理想的视口宽度/布局视口宽度。")]),t._v(" "),e("p",[t._v("不过，在这些测试中，我可以使用荒谬的布局视口宽度，例如5000。我这样做了，结果是：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Android WebKit的最小缩放因子为0.25，最大缩放因子为4。这一点无法更改。然而，它使用640/0.25=2560px，这对于横向来说是正确的，即使在纵向模式下也是如此。")])]),t._v(" "),e("li",[e("p",[t._v("IE的最大视觉视口宽度为1024px。它的最大缩放因子在纵向为6，在横向为6和2/3。这一点无法更改。")])]),t._v(" "),e("li",[e("p",[t._v("在其他浏览器中，没有任何缩放指令，最小缩放系数约为0.25，最大缩放系数约为5。")])]),t._v(" "),e("li",[e("p",[t._v("添加指令（如巨大的"),e("code",[t._v("layout viewport width")]),t._v("或巨大的"),e("code",[t._v("maximum-scale")]),t._v("）会导致最小因子约为0.1，最大因子约为10。")])])]),t._v(" "),e("p",[t._v("这些因素略有不同；请参阅下表。")]),t._v(" "),e("p",[t._v("因此，理论上，iPhone的视觉视口("),e("em",[t._v("visual viewport")]),t._v(")宽度可以在32像素（缩放因子10）到3200像素（缩放系数0.1）之间。")]),t._v(" "),e("h2",{attrs:{id:"compatibility-zoom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compatibility-zoom"}},[t._v("#")]),t._v(" Compatibility - zoom")]),t._v(" "),e("p",[t._v("下面是上面所有的简单表格格式。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://qwq9527.gitee.io/resource/imgs/1698482545442.png",alt:""}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://qwq9527.gitee.io/resource/imgs/1698482570451.png",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"initial-scale"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#initial-scale"}},[t._v("#")]),t._v(" initial-scale")]),t._v(" "),e("p",[t._v("设置 "),e("code",[t._v("initial-scale")]),t._v(" 指令实际上做了两件事:")]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("它将页面的初始缩放因子设置为定义值，相对于理想视口("),e("em",[t._v("ideal viewport")]),t._v(")计算。因此它生成一个可视视口("),e("em",[t._v("visual viewport")]),t._v(")宽度。")])]),t._v(" "),e("li",[e("strong",[t._v("它将布局视口("),e("em",[t._v("layout viewport")]),t._v(")宽度设置为它刚刚计算的可视视口("),e("em",[t._v("visual viewport")]),t._v(")宽度。")])])]),t._v(" "),e("p",[t._v("假设我们有一个竖屏模式的iPhone给它一个"),e("code",[t._v("initial-scale=2")]),t._v("，没有任何进一步的说明。到目前为止，你应该不会感到惊讶，这将可视视口("),e("em",[t._v("visual viewport")]),t._v(")宽度设置为160px(= 320 / 2)，这就是缩放指令的工作方式。")]),t._v(" "),e("p",[t._v("但是，它也将布局视口("),e("em",[t._v("layout viewport")]),t._v(")的宽度设置为160px。经过了最小缩放，所以我们现在有一个160px宽的页面。(可视视口("),e("em",[t._v("visual viewport")]),t._v(")不能变得比布局视口("),e("em",[t._v("visual viewport")]),t._v(")大，所以不能缩小。)")]),t._v(" "),e("p",[t._v("不，这一点道理都没有。如果被问到我的坦率意见，我可能会咕哝一些类似“completely fucking batshit insane”的话。不过，毫无疑问，浏览器的行为是这样的。")]),t._v(" "),e("h2",{attrs:{id:"browser-bugs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#browser-bugs"}},[t._v("#")]),t._v(" Browser bugs")]),t._v(" "),e("p",[t._v("Android WebKit除外。明显地，只有当值为1且没有 "),e("code",[t._v("width")]),t._v(" 指令时，Android WebKit才允许 "),e("code",[t._v("initial-scale")]),t._v("设置布局视口("),e("em",[t._v("layout viewport")]),t._v(")宽度。因此，只有 "),e("code",[t._v("initial-scale=1")]),t._v(" ，而没有任何其他指令才有效。")]),t._v(" "),e("p",[t._v("至于IE，它应用了错误的理想视口("),e("em",[t._v("ideal viewport")]),t._v(")（320x320而不是320x480），并且还假定任何值为1。因此，你给"),e("code",[t._v("initial-scale")]),t._v("的值在IE中并不重要。")]),t._v(" "),e("h2",{attrs:{id:"conflicting-width-directives"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conflicting-width-directives"}},[t._v("#")]),t._v(" Conflicting width directives")]),t._v(" "),e("p",[t._v("由于"),e("code",[t._v("initial-scale")]),t._v("设置布局视口("),e("em",[t._v("layout viewport")]),t._v(")宽度，你现在可以创建冲突的指令:")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("viewport"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("initial-scale=1,width=400"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[t._v("现在发生了什么?浏览器收到冲突的命令。让我们再次回到iPhone 4S:")]),t._v(" "),e("ol",[e("li",[e("p",[e("code",[t._v("initial-scale =1")]),t._v("告诉它将布局视口宽度设置为纵向320px和横向480px。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("width=400")]),t._v("告诉它将纵向和横向的布局视口("),e("em",[t._v("layout viewport")]),t._v(")宽度设置为400px。")])])]),t._v(" "),e("p",[t._v("浏览器通过遵循纵向或横向的"),e("strong",[t._v("最大宽度")]),t._v("来解决这个问题。在我们的示例中，纵向布局视口("),e("em",[t._v("layout viewport")]),t._v(")宽度变为400px(320和400中较大的那个)，横向布局视口("),e("em",[t._v("layout viewport")]),t._v(")宽度变为480px(480和400中较大的那个)。")]),t._v(" "),e("p",[t._v("有道理吗?实际上它不会，但浏览器还是会这样做。")]),t._v(" "),e("p",[t._v("在任何情况下，我们这里有一个 "),e("strong",[t._v("min-width")]),t._v("布局视窗("),e("em",[t._v("layout viewport")]),t._v(")。上面的meta标签将"),e("code",[t._v("min-width")]),t._v("设置为400px，但允许浏览器在设备大小和方向需要的情况下扩展("),e("em",[t._v("grow")]),t._v(")布局视口("),e("em",[t._v("layout viewport")]),t._v(")。")]),t._v(" "),e("p",[t._v("我不确定是否有任何实际用途对于"),e("strong",[t._v("min-width")]),t._v("布局视口("),e("em",[t._v("layout viewport")]),t._v(")，但如果你需要一个，嘿，它在那里!")]),t._v(" "),e("h2",{attrs:{id:"browser-bugs-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#browser-bugs-2"}},[t._v("#")]),t._v(" Browser bugs")]),t._v(" "),e("p",[t._v("Android WebKit不遵循这些规则。如果"),e("code",[t._v("width")]),t._v("等于"),e("code",[t._v("device-width")]),t._v("或者小于320,Android WebKit总是将理想视口("),e("em",[t._v("ideal viewport")]),t._v(")宽度应用于布局视口("),e("em",[t._v("layout viewport")]),t._v(")。在320以上，它总是服从 "),e("code",[t._v("width")]),t._v(" 指令。")]),t._v(" "),e("p",[t._v("当IE将布局视窗("),e("em",[t._v("layout viewport")]),t._v(")宽度设置为1024px时，它不遵循上述 "),e("code",[t._v("width=480")]),t._v("的规则。")]),t._v(" "),e("h2",{attrs:{id:"compatibility-initial-scale-and-width"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compatibility-initial-scale-and-width"}},[t._v("#")]),t._v(" Compatibility - initial scale and width")]),t._v(" "),e("p",[t._v("下面是上面所有的简单表格格式。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://qwq9527.gitee.io/resource/imgs/1698482605865.png",alt:""}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://qwq9527.gitee.io/resource/imgs/1698482631663.png",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"iphone的小bug"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#iphone的小bug"}},[t._v("#")]),t._v(" iPhone的小bug")]),t._v(" "),e("p",[t._v("我在iPhone上发现了一个小bug，但在iPad上没有。")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("如果 "),e("code",[t._v("width")]),t._v(" 和 "),e("code",[t._v("initial-scale")]),t._v(" 的组合导致浏览器在横向模式下自动放大(即视觉视窗("),e("em",[t._v("visual viewport")]),t._v(")小于布局视窗("),e("em",[t._v("layout viewport")]),t._v("))")])]),t._v(" "),e("li",[e("p",[t._v("并且用户在横向模式下缩小，然后切换到纵向模式")])]),t._v(" "),e("li",[e("p",[t._v("纵向的"),e("code",[t._v("minimum-scale")]),t._v("等于横向的"),e("code",[t._v("minimum-scale")]),t._v("（即视口宽度）乘以纵向/横向比率。（因此，横向视口宽度为400会导致纵向"),e("code",[t._v("minimum-scale")]),t._v("为268。）???")])]),t._v(" "),e("li",[e("p",[t._v("解决方案:在纵向上尽可能放大。bug就消失了。")])])]),t._v(" "),e("h2",{attrs:{id:"minimum-and-maximum-scale"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#minimum-and-maximum-scale"}},[t._v("#")]),t._v(" minimum- and maximum-scale")]),t._v(" "),e("p",[t._v("对于 "),e("code",[t._v("minimum-scale")]),t._v("和"),e("code",[t._v("maximum-scale")]),t._v("，我只做了一个小部分的的测试。它们通常看起来工作得很好，除了Android WebKit，它不支持 "),e("code",[t._v("minimum-scale")]),t._v("，以及IE，它把事情弄得一团糟 — 如此糟糕，事实上，我已经放弃了试图理解发生了什么。")]),t._v(" "),e("p",[t._v("在下面的测试中，应该发生的是，如上所述计算布局视口("),e("em",[t._v("layout viewport")]),t._v(")宽度，然后将缩放限制在50%和200%之间，即视觉视口("),e("em",[t._v("visual viewport")]),t._v(")可以从理想视口("),e("em",[t._v("ideal viewport")]),t._v(")的两倍大变为两倍小。")]),t._v(" "),e("p",[t._v("有一个例外:视觉视口永远不能小于布局视口。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://qwq9527.gitee.io/resource/imgs/1698482656670.png",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"reference"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[t._v("#")]),t._v(" reference")]),t._v(" "),e("ul",[e("li",[e("em",[e("a",{attrs:{href:"https://www.quirksmode.org/mobile/metaviewport/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Meta viewport (quirksmode.org)"),e("OutboundLink")],1)])])])])}),[],!1,null,null,null);e.default=i.exports}}]);