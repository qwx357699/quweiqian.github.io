(window.webpackJsonp=window.webpackJsonp||[]).push([[334],{697:function(t,a,s){"use strict";s.r(a);var r=s(10),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"参数默认值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数默认值"}},[t._v("#")]),t._v(" 参数默认值")]),t._v(" "),a("h2",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("p",[t._v("在书写形参时，直接给形参赋值，附的值即为默认值")]),t._v(" "),a("p",[t._v("这样一来，当调用函数时，如果没有给对应的参数赋值（给它的值是undefined），则会自动使用默认值。")]),t._v(" "),a("h2",{attrs:{id:"扩展-对arguments的影响"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展-对arguments的影响"}},[t._v("#")]),t._v(" [扩展]对arguments的影响")]),t._v(" "),a("p",[t._v("只要给函数加上参数默认值，该函数会自动变量严格模式下的规则：arguments和形参脱离")]),t._v(" "),a("h2",{attrs:{id:"扩展-留意暂时性死区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展-留意暂时性死区"}},[t._v("#")]),t._v(" [扩展]留意暂时性死区")]),t._v(" "),a("p",[t._v("形参和ES6中的let或const声明一样，具有作用域，并且根据参数的声明顺序，存在暂时性死区。")])])}),[],!1,null,null,null);a.default=e.exports}}]);