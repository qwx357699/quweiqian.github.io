(window.webpackJsonp=window.webpackJsonp||[]).push([[417],{786:function(t,i,e){"use strict";e.r(i);var s=e(10),v=Object(s.a)({},(function(){var t=this,i=t._self._c;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"fetch-api-概述"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#fetch-api-概述"}},[t._v("#")]),t._v(" Fetch Api 概述")]),t._v(" "),i("p",[i("strong",[t._v("XMLHttpRequest的问题")])]),t._v(" "),i("ol",[i("li",[t._v("所有的功能全部集中在同一个对象上，容易书写出混乱不易维护的代码")]),t._v(" "),i("li",[t._v("采用传统的事件驱动模式，无法适配新的 Promise Api")])]),t._v(" "),i("p",[i("strong",[t._v("Fetch Api 的特点")])]),t._v(" "),i("ol",[i("li",[t._v("并非取代 AJAX，而是对 AJAX 传统 API 的改进")]),t._v(" "),i("li",[t._v("精细的功能分割：头部信息、请求信息、响应信息等均分布到不同的对象，更利于处理各种复杂的 AJAX 场景")]),t._v(" "),i("li",[t._v("使用 Promise Api，更利于异步代码的书写")]),t._v(" "),i("li",[t._v("Fetch Api 并非 ES6 的内容，属于 HTML5 新增的 Web Api")]),t._v(" "),i("li",[t._v("需要掌握网络通信的知识")])])])}),[],!1,null,null,null);i.default=v.exports}}]);