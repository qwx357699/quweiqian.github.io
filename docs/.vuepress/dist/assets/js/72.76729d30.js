(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{439:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"知识回顾-数据的运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#知识回顾-数据的运算"}},[t._v("#")]),t._v(" 知识回顾-数据的运算")]),t._v(" "),s("p",[t._v("[toc]")]),t._v(" "),s("h2",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),s("h3",{attrs:{id:"算术-数学-运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算术-数学-运算"}},[t._v("#")]),t._v(" 算术（数学）运算")]),t._v(" "),s("p",[t._v("支持：加(+)、减(-)、乘(*)、除(/)、求余(%)")]),t._v(" "),s("p",[t._v("值得注意的是，+和-可以放到单个数据的前面，表示正负。")]),t._v(" "),s("p",[t._v("算术运算的表达式一定返回数字，可以利用其特点做类型转换，参考"),s("a",{attrs:{href:"#%E7%B1%BB%E5%9E%8B%E7%9A%84%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A2"}},[t._v("类型的隐式转换")])]),t._v(" "),s("h3",{attrs:{id:"字符串拼接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串拼接"}},[t._v("#")]),t._v(" 字符串拼接")]),t._v(" "),s("p",[t._v("当"),s("code",[t._v("+")]),t._v("的两端有一个是字符串时，不再进行算术运算，而变为字符串拼接")]),t._v(" "),s("p",[t._v("表达式一定返回string，可以利用其特点做类型转换，参考"),s("a",{attrs:{href:"#%E7%B1%BB%E5%9E%8B%E7%9A%84%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A2"}},[t._v("类型的隐式转换")])]),t._v(" "),s("h3",{attrs:{id:"赋值运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算"}},[t._v("#")]),t._v(" 赋值运算")]),t._v(" "),s("p",[t._v("涉及的运算符："),s("code",[t._v("=")]),t._v(" "),s("code",[t._v("+=")]),t._v(" "),s("code",[t._v("*=")]),t._v(" "),s("code",[t._v("/=")]),t._v(" "),s("code",[t._v("-=")]),t._v(" "),s("code",[t._v("%=")]),t._v("。")]),t._v(" "),s("p",[t._v("其中，"),s("code",[t._v("a += xxx")]),t._v("，等效于"),s("code",[t._v("a = a + (xxx)")]),t._v("，其他类似")]),t._v(" "),s("blockquote",[s("p",[t._v("小贴士\n赋值表达式始终返回赋值结果，我们可以利用该特点完成连续赋值")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 3 同时赋值给 a、b")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("h3",{attrs:{id:"比较运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较运算"}},[t._v("#")]),t._v(" 比较运算")]),t._v(" "),s("p",[t._v("涉及的运算符："),s("code",[t._v("==")]),t._v(" "),s("code",[t._v("===")]),t._v(" "),s("code",[t._v("!=")]),t._v(" "),s("code",[t._v("!==")]),t._v(" "),s("code",[t._v(">")]),t._v(" "),s("code",[t._v(">=")]),t._v(" "),s("code",[t._v("<")]),t._v(" "),s("code",[t._v("<=")])]),t._v(" "),s("blockquote",[s("p",[t._v("小贴士\n在实际开发中，没有任何理由使用"),s("code",[t._v("==")]),t._v("和"),s("code",[t._v("!=")]),t._v("，你可以当做这两个运算符并不存在。\n应该始终使用"),s("code",[t._v("===")]),t._v("和"),s("code",[t._v("!==")]),t._v("来比较相等和不相等")])]),t._v(" "),s("blockquote",[s("p",[t._v("小贴士\n比较运算始终返回boolean，我们可以利用这一点来完成某些赋值")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 啰嗦的代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isMale "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isMale "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 简洁优雅的代码")]),t._v("\nuser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isMale "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),t._v("\n")])])])]),t._v(" "),s("h3",{attrs:{id:"逻辑运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算"}},[t._v("#")]),t._v(" 逻辑运算")]),t._v(" "),s("p",[t._v("逻辑运算会涉及到"),s("a",{attrs:{href:"#%E5%B8%83%E5%B0%94%E5%88%A4%E5%AE%9A"}},[t._v("布尔判定")])]),t._v(" "),s("p",[t._v("运算符："),s("code",[t._v("!")])]),t._v(" "),s("p",[t._v("对后面的数据取反，表达式一定返回boolean。")]),t._v(" "),s("p",[t._v("可以利用其特点做类型转换，参考"),s("a",{attrs:{href:"#%E7%B1%BB%E5%9E%8B%E7%9A%84%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A2"}},[t._v("类型的隐式转换")])]),t._v(" "),s("p",[t._v("运算符："),s("code",[t._v("&&")])]),t._v(" "),s("p",[t._v("并且，真真为真，其他为假，具有短路规则。")]),t._v(" "),s("p",[t._v("表达式返回"),s("strong",[t._v("最后一个判定的数据")])]),t._v(" "),s("blockquote",[s("p",[t._v("小贴士\n在实际的开发中，我们可以利用短路规则简化代码")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实现功能，如果exp有值（判定为真），就输出ok")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 啰嗦的代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 简洁的代码")]),t._v("\nexp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("p",[t._v("运算符："),s("code",[t._v("||")])]),t._v(" "),s("p",[t._v("或者，假假为假，其他为真，具有短路规则。")]),t._v(" "),s("p",[t._v("表达式返回"),s("strong",[t._v("最后一个判定的数据")])]),t._v(" "),s("blockquote",[s("p",[t._v("小贴士\n在实际的开发中，我们可以利用短路规则简化代码")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实现功能，如果exp有值，就把它的值赋值给n，如果没有值，就给n赋值为默认值 1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 啰嗦的代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" exp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 简洁的代码")]),t._v("\nn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" exp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("p",[t._v("运算符："),s("code",[t._v("? :")]),t._v("，格式"),s("code",[t._v("a ? b : c")])]),t._v(" "),s("p",[t._v("三目运算，判定a，为真时表达式返回b，否则返回c")]),t._v(" "),s("blockquote",[s("p",[t._v("小贴士\n三目运算通常用于替代一些简单的if结构")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果exp为真，则把1赋值给n，否则，把2赋值给n")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 啰嗦的代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更简洁的代码")]),t._v("\nn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" exp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("h2",{attrs:{id:"布尔判定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布尔判定"}},[t._v("#")]),t._v(" 布尔判定")]),t._v(" "),s("p",[t._v("所有需要判断真假的地方都会使用下面的规则")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("数据")]),t._v(" "),s("th",[t._v("判定")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("false")]),t._v(" "),s("code",[t._v("null")]),t._v(" "),s("code",[t._v("undefined")]),t._v(" "),s("code",[t._v("0")]),t._v(" "),s("code",[t._v("NaN")]),t._v(" "),s("code",[t._v("''")])]),t._v(" "),s("td",[t._v("false")])]),t._v(" "),s("tr",[s("td",[t._v("剩余所有数据")]),t._v(" "),s("td",[t._v("true")])])])]),t._v(" "),s("h2",{attrs:{id:"类型的隐式转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型的隐式转换"}},[t._v("#")]),t._v(" 类型的隐式转换")]),t._v(" "),s("p",[t._v("每个运算符都有自己期望的数据，比如"),s("code",[t._v("*")]),t._v("期望两端都是数字")]),t._v(" "),s("p",[t._v("一旦数据不符合运算符的期望，js就会悄悄的对数据进行类型转换，把它转换成期望的值后进行运算。")]),t._v(" "),s("p",[t._v("值得注意的是，这种转换是 "),s("em",[t._v("临时")]),t._v(" 的，并不会对原数据造成影响")]),t._v(" "),s("blockquote",[s("p",[t._v("小贴士\n在实际的开发中，我们可以利用类型的隐式转换完成以下功能：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不管a是啥，都会被转换成数字，保存到n中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不管a是啥，都会被转换成字符串，保存到s中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不管a是啥，都会被转换成boolean，保存到b中")]),t._v("\n")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);