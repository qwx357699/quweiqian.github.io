(window.webpackJsonp=window.webpackJsonp||[]).push([[544],{915:function(v,_,t){"use strict";t.r(_);var a=t(10),r=Object(a.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"如何在浏览器端实现模块化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何在浏览器端实现模块化"}},[v._v("#")]),v._v(" 如何在浏览器端实现模块化")]),v._v(" "),_("p",[v._v("[toc]")]),v._v(" "),_("h2",{attrs:{id:"课程简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#课程简介"}},[v._v("#")]),v._v(" 课程简介")]),v._v(" "),_("p",[v._v("本门课需要的前置知识：ES6、模块化、包管理器、git")]),v._v(" "),_("p",[v._v("本门课的讲解特点：")]),v._v(" "),_("ol",[_("li",[v._v("合适的深度：webpack使用层面很简单，但原理层面非常复杂")]),v._v(" "),_("li",[v._v("合适的广度：webpack生态圈极其繁荣，有海量的第三方库可以融入到webpack")])]),v._v(" "),_("h2",{attrs:{id:"浏览器端的模块化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器端的模块化"}},[v._v("#")]),v._v(" 浏览器端的模块化")]),v._v(" "),_("p",[v._v("问题：")]),v._v(" "),_("ul",[_("li",[v._v("效率问题：精细的模块划分带来了更多的JS文件，更多的JS文件带来了更多的请求，降低了页面访问效率")]),v._v(" "),_("li",[v._v("兼容性问题：浏览器目前仅支持ES6的模块化标准，并且还存在兼容性问题")]),v._v(" "),_("li",[v._v("工具问题：浏览器不支持npm下载的第三方包")])]),v._v(" "),_("p",[v._v("这些仅仅是前端工程化的一个缩影")]),v._v(" "),_("p",[v._v("当开发一个具有规模的程序，你将遇到非常多的非业务问题，这些问题包括：执行效率、兼容性、代码的可维护性可扩展性、团队协作、测试等等等等，我们将这些问题称之为工程问题。工程问题与业务无关，但它深刻的影响到开发进度，如果没有一个好的工具解决这些问题，将使得开发进度变得极其缓慢，同时也让开发者陷入技术的泥潭。")]),v._v(" "),_("h2",{attrs:{id:"根本原因"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#根本原因"}},[v._v("#")]),v._v(" 根本原因")]),v._v(" "),_("p",[v._v("思考：上面提到的问题，为什么在node端没有那么明显，反而到了浏览器端变得如此严重呢？")]),v._v(" "),_("p",[v._v("答：在node端，运行的JS文件在本地，因此可以本地读取文件，它的效率比浏览器远程传输文件高的多")]),v._v(" "),_("p",[_("strong",[v._v("根本原因")]),v._v("：在浏览器端，开发时态（devtime）和运行时态（runtime）的侧重点不一样")]),v._v(" "),_("p",[_("strong",[v._v("开发时态，devtime：")])]),v._v(" "),_("ol",[_("li",[v._v("模块划分越细越好")]),v._v(" "),_("li",[v._v("支持多种模块化标准")]),v._v(" "),_("li",[v._v("支持npm或其他包管理器下载的模块")]),v._v(" "),_("li",[v._v("能够解决其他工程化的问题")])]),v._v(" "),_("p",[_("strong",[v._v("运行时态，runtime：")])]),v._v(" "),_("ol",[_("li",[v._v("文件越少越好")]),v._v(" "),_("li",[v._v("文件体积越小越好")]),v._v(" "),_("li",[v._v("代码内容越乱越好")]),v._v(" "),_("li",[v._v("所有浏览器都要兼容")]),v._v(" "),_("li",[v._v("能够解决其他运行时的问题，主要是执行效率问题")])]),v._v(" "),_("p",[v._v("这种差异在小项目中表现的并不明显，可是一旦项目形成规模，就越来越明显，如果不解决这些问题，前端项目形成规模只能是空谈")]),v._v(" "),_("h2",{attrs:{id:"解决办法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#解决办法"}},[v._v("#")]),v._v(" 解决办法")]),v._v(" "),_("p",[v._v("既然开发时态和运行时态面临的局面有巨大的差异，因此，我们需要有一个工具，这个工具能够让开发者专心的在开发时态写代码，然后利用这个工具将开发时态编写的代码转换为运行时态需要的东西。")]),v._v(" "),_("p",[v._v("这样的工具，叫做"),_("strong",[v._v("构建工具")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://qwq9527.gitee.io/resource/imgs/2020-01-07-05-06-11.png",alt:"2020-01-07-05-06-11.png (1185×574) (gitee.io)"}})]),v._v(" "),_("p",[v._v("这样一来，开发者就可以专注于开发时态的代码结构，而不用担心运行时态遇到的问题了。")]),v._v(" "),_("h2",{attrs:{id:"常见的构建工具"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见的构建工具"}},[v._v("#")]),v._v(" 常见的构建工具")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("webpack")])]),v._v(" "),_("li",[v._v("grunt")]),v._v(" "),_("li",[v._v("gulp")]),v._v(" "),_("li",[v._v("browserify")]),v._v(" "),_("li",[v._v("fis")]),v._v(" "),_("li",[v._v("其他")])])])}),[],!1,null,null,null);_.default=r.exports}}]);