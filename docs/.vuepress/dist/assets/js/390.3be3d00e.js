(window.webpackJsonp=window.webpackJsonp||[]).push([[390],{759:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"使用let声明变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用let声明变量"}},[t._v("#")]),t._v(" 使用let声明变量")]),t._v(" "),s("p",[t._v("ES6不仅引入let关键字用于解决变量声明的问题，同时引入了块级作用域的概念")]),t._v(" "),s("p",[t._v("块级作用域：代码执行时遇到花括号，会创建一个块级作用域，花括号结束，销毁块级作用域")]),t._v(" "),s("p",[t._v("声明变量的问题")]),t._v(" "),s("ol",[s("li",[t._v("全局变量挂载到全局对象：全局对象成员污染问题")])]),t._v(" "),s("p",[t._v("let声明的变量不会挂载到全局对象")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("允许重复的变量声明：导致数据被覆盖")])]),t._v(" "),s("p",[t._v("let声明的变量，不允许当前作用域范围内重复声明")]),t._v(" "),s("p",[t._v("在块级作用域中用let定义的变量，在作用域外不能访问")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("变量提升：怪异的数据访问、闭包问题")])]),t._v(" "),s("h2",{attrs:{id:"暂时性死区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#暂时性死区"}},[t._v("#")]),t._v(" 暂时性死区")]),t._v(" "),s("p",[t._v("使用let不会有变量提升，因此，不能在定义let变量之前使用它")]),t._v(" "),s("p",[t._v("底层实现上，let声明的变量实际上也会有提升，但是，提升后会将其放入到“暂时性死区”，如果访问的变量位于暂时性死区，则会报错：“Cannot access 'a' before initialization”。当代码运行到该变量的声明语句时，会将其从暂时性死区中移除。")]),t._v(" "),s("h2",{attrs:{id:"循环中特殊处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环中特殊处理"}},[t._v("#")]),t._v(" 循环中特殊处理")]),t._v(" "),s("p",[t._v("在循环中，用let声明的循环变量，会特殊处理，每次进入循环体，"),s("strong",[t._v("都会开启一个新的作用域")]),t._v("，并且将循环变量绑定到该作用域（每次循环，使用的是一个全新的循环变量）")]),t._v(" "),s("p",[t._v("在循环中使用let声明的循环变量，在循环结束后会销毁")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 相当于")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);