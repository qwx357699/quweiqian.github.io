(window.webpackJsonp=window.webpackJsonp||[]).push([[322],{697:function(t,s,a){"use strict";a.r(s);var _=a(10),v=Object(_.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"常见请求方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见请求方法"}},[t._v("#")]),t._v(" 常见请求方法")]),t._v(" "),s("h2",{attrs:{id:"请求方法的本质"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请求方法的本质"}},[t._v("#")]),t._v(" 请求方法的本质")]),t._v(" "),s("p",[s("strong",[t._v("请求方法是请求行中的第一个单词，它向服务器描述了客户端发出请求的动作类型。在 HTTP 协议中，不同的请求方法只是包含了不同的语义，但服务器和浏览器的一些约定俗成的行为造成了它们具体的区别")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://qwq9527.gitee.io/resource/imgs/20210914102745.png",alt:"image-20210914102745190"}})]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://www.baidu.com'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("method")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'heiheihei'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 告诉百度，我这次请求是来嘿嘿嘿的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("上面的请求中，我们使用了自定义方法"),s("code",[t._v("heiheihei")]),t._v("。虽然百度服务器无法理解这样的请求是在干什么，但这样的请求也是可以正常发送到百度服务器的。")]),t._v(" "),s("p",[t._v("在实践中，客户端和服务器慢慢的形成了一个共识，约定俗成的规定了一些常见的请求方法：")]),t._v(" "),s("ul",[s("li",[t._v("GET，表示向服务器获取资源。业务数据在请求行中，无须请求体")]),t._v(" "),s("li",[t._v("POST，表示向服务器提交信息，通常用于产生新的数据，比如注册。业务数据在请求体中")]),t._v(" "),s("li",[t._v("PUT，表示希望修改服务器的数据，通常用于修改。业务数据在请求体中")]),t._v(" "),s("li",[t._v("DELETE，表示希望删除服务器的数据。业务数据在请求行中，无须请求体。")]),t._v(" "),s("li",[t._v("OPTIONS，发生在跨域的预检请求中，表示客户端向服务器申请跨域提交")]),t._v(" "),s("li",[t._v("TRACE，回显服务器收到的请求，主要用于测试和诊断")]),t._v(" "),s("li",[t._v("CONNECT，用于建立连接管道，通常在代理场景中使用，网页中很少用到")])]),t._v(" "),s("h2",{attrs:{id:"get-和-post-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-和-post-的区别"}},[t._v("#")]),t._v(" GET 和 POST 的区别")]),t._v(" "),s("p",[s("strong",[t._v("由于浏览器和服务器约定俗称的规则")]),t._v("，造成了 GET 和 POST 请求在 web 中的区别：")]),t._v(" "),s("ol",[s("li",[t._v("浏览器在发送 GET 请求时，不会附带请求体")]),t._v(" "),s("li",[t._v("GET 请求的传递信息量有限，适合传递少量数据；POST 请求的传递信息量是没有限制的，适合传输大量数据。")]),t._v(" "),s("li",[t._v("GET 请求只能传递 ASCII 数据，遇到非 ASCII 数据需要进行编码；POST 请求没有限制")]),t._v(" "),s("li",[t._v("大部分 GET 请求传递的数据都附带在 path 参数中，能够通过分享地址完整的重现页面，但同时也暴露了数据，若有敏感数据传递，不应该使用 GET 请求，至少不应该放到 path 中")]),t._v(" "),s("li",[t._v("刷新页面时，若当前的页面是通过 POST 请求得到的，则浏览器会提示用户是否重新提交。若是 GET 请求得到的页面则没有提示。")]),t._v(" "),s("li",[t._v("GET 请求的地址可以被保存为浏览器书签，POST 不可以")])]),t._v(" "),s("h2",{attrs:{id:"面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试题"}},[t._v("#")]),t._v(" 面试题")]),t._v(" "),s("h3",{attrs:{id:"_1-http-常见请求方法有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-http-常见请求方法有哪些"}},[t._v("#")]),t._v(" 1. http 常见请求方法有哪些？")]),t._v(" "),s("blockquote",[s("p",[t._v("参考答案：")]),t._v(" "),s("ul",[s("li",[t._v("GET，表示向服务器获取资源")]),t._v(" "),s("li",[t._v("POST，表示向服务器提交信息，通常用于产生新的数据，比如注册")]),t._v(" "),s("li",[t._v("PUT，表示希望修改服务器的数据，通常用于修改")]),t._v(" "),s("li",[t._v("DELETE，表示希望删除服务器的数据")]),t._v(" "),s("li",[t._v("OPTIONS，发生在跨域的预检请求中，表示客户端向服务器申请跨域提交")]),t._v(" "),s("li",[t._v("TRACE，回显服务器收到的请求，主要用于测试和诊断")]),t._v(" "),s("li",[t._v("CONNECT，用于建立连接管道，通常在代理场景中使用，网页中很少用到")])])]),t._v(" "),s("h3",{attrs:{id:"_2-get-和-post-的区别-流利说"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-get-和-post-的区别-流利说"}},[t._v("#")]),t._v(" 2. GET 和 POST 的区别（流利说）")]),t._v(" "),s("blockquote",[s("p",[t._v("参考答案：")]),t._v(" "),s("p",[t._v("从 http 协议的角度来说，GET 和 POST 它们都只是请求行中的第一个单词，除了语义不同，其实没有本质的区别。")]),t._v(" "),s("p",[t._v("之所以在实际开发中会产生各种区别，主要是因为浏览器的默认行为造成的。")]),t._v(" "),s("p",[t._v("受浏览器的影响，在实际开发中，GET 和 POST 有以下区别：")]),t._v(" "),s("ol",[s("li",[t._v("浏览器在发送 GET 请求时，不会附带请求体")]),t._v(" "),s("li",[t._v("GET 请求的传递信息量有限，适合传递少量数据；POST 请求的传递信息量是没有限制的，适合传输大量数据。")]),t._v(" "),s("li",[t._v("GET 请求只能传递 ASCII 数据，遇到非 ASCII 数据需要进行编码；POST 请求没有限制")]),t._v(" "),s("li",[t._v("大部分 GET 请求传递的数据都附带在 path 参数中，能够通过分享地址完整的重现页面，但同时也暴露了数据，若有敏感数据传递，不应该使用 GET 请求，至少不应该放到 path 中")]),t._v(" "),s("li",[t._v("刷新页面时，若当前的页面是通过 POST 请求得到的，则浏览器会提示用户是否重新提交。若是 GET 请求得到的页面则没有提示。")]),t._v(" "),s("li",[t._v("GET 请求的地址可以被保存为浏览器书签，POST 不可以")])])])])}),[],!1,null,null,null);s.default=v.exports}}]);