(window.webpackJsonp=window.webpackJsonp||[]).push([[382],{750:function(t,a,r){"use strict";r.r(a);var v=r(10),_=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"yarn-的核心命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yarn-的核心命令"}},[t._v("#")]),t._v(" yarn 的核心命令")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("初始化")])])]),t._v(" "),a("p",[t._v("初始化："),a("code",[t._v("yarn init [--yes/-y]")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("strong",[t._v("安装")])])]),t._v(" "),a("p",[t._v("添加指定包："),a("code",[t._v("yarn [global] add package-name [--dev/-D] [--exact/-E]")])]),t._v(" "),a("p",[t._v("安装package.json中的所有依赖："),a("code",[t._v("yarn install [--production/--prod]")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("strong",[t._v("脚本和本地CLI")])])]),t._v(" "),a("p",[t._v("运行脚本："),a("code",[t._v("yarn run 脚本名")])]),t._v(" "),a("blockquote",[a("p",[t._v("start、stop、test可以省略run")])]),t._v(" "),a("p",[t._v("运行本地安装的CLI："),a("code",[t._v("yarn run CLI名")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("strong",[t._v("查询")])])]),t._v(" "),a("p",[t._v("查看bin目录："),a("code",[t._v("yarn [global] bin")])]),t._v(" "),a("p",[t._v("查询包信息："),a("code",[t._v("yarn info 包名 [子字段]")])]),t._v(" "),a("p",[t._v("列举已安装的依赖："),a("code",[t._v("yarn [global] list [--depth=依赖深度]")])]),t._v(" "),a("blockquote",[a("p",[t._v("yarn的list命令和npm的list不同，yarn输出的信息更加丰富，包括顶级目录结构、每个包的依赖版本号")])]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[a("strong",[t._v("更新")])])]),t._v(" "),a("p",[t._v("列举需要更新的包："),a("code",[t._v("yarn outdated")])]),t._v(" "),a("p",[t._v("更新包："),a("code",[t._v("yarn [global] upgrade [包名]")])]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[a("strong",[t._v("卸载")])])]),t._v(" "),a("p",[t._v("卸载包："),a("code",[t._v("yarn remove 包名")])])])}),[],!1,null,null,null);a.default=_.exports}}]);