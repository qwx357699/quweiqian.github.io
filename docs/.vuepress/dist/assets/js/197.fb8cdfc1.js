(window.webpackJsonp=window.webpackJsonp||[]).push([[197],{568:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"css-属性的计算过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-属性的计算过程"}},[t._v("#")]),t._v(" "),s("em",[t._v("CSS")]),t._v(" 属性的计算过程")]),t._v(" "),s("h2",{attrs:{id:"经典真题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#经典真题"}},[t._v("#")]),t._v(" 经典真题")]),t._v(" "),s("ul",[s("li",[t._v("请简述 "),s("em",[t._v("CSS")]),t._v(" 中属性的计算过程是怎样的")])]),t._v(" "),s("h2",{attrs:{id:"css-属性的计算过程-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-属性的计算过程-2"}},[t._v("#")]),t._v(" "),s("em",[t._v("CSS")]),t._v(" 属性的计算过程")]),t._v(" "),s("p",[t._v("首先，让我们从最简单的代码开始，例如：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("this is a test"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("上面是一段很简单的代码，就一个段落，然后设置了一个颜色属性为红色。")]),t._v(" "),s("p",[t._v("那么，我们的这个段落真的就只有一个属性值 "),s("em",[t._v("color")]),t._v(" 么？")]),t._v(" "),s("p",[s("em",[t._v("no、no、no")]),t._v("，真实的情况是这个元素所有的属性都拥有，只不过有一组默认的属性值。例如：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2021-09-16-065854.png",alt:"image-20210916145853445"}})]),t._v(" "),s("p",[t._v("当我们打开浏览器控制台，来到 "),s("em",[t._v("Elements > Computed")]),t._v(" 面板，我们就会发现就算这么一个小小的 "),s("em",[t._v("p")]),t._v("，虽然我们只设置了一个 "),s("em",[t._v("color")]),t._v(" 属性，但是其实它一个属性都没落下，每个属性都是有默认值。")]),t._v(" "),s("p",[t._v("所以这里我们要讨论一下这个属性值的计算过程是什么样子的。")]),t._v(" "),s("p",[t._v("总的来讲，属性值的计算方法有下面 "),s("em",[t._v("4")]),t._v(" 种，这也是属性值的计算顺序：")]),t._v(" "),s("ul",[s("li",[t._v("确定声明值")]),t._v(" "),s("li",[t._v("层叠冲突")]),t._v(" "),s("li",[t._v("使用继承")]),t._v(" "),s("li",[t._v("使用默认值")])]),t._v(" "),s("p",[s("strong",[t._v("确定声明值")])]),t._v(" "),s("p",[t._v("当我们在样式表中对某一个元素书写样式声明时，这个声明就会被当作 "),s("em",[t._v("CSS")]),t._v(" 的属性值。")]),t._v(" "),s("p",[t._v("举个例子：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("test"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("在上面的代码中，我们没有书写任何的 "),s("em",[t._v("CSS")]),t._v(" 样式，所以这个时候就采用浏览器的默认样式")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 32px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-weight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 700\n")])])]),s("p",[t._v("假设现在我们为这个 "),s("em",[t._v("h1")]),t._v(" 设置一个样式：")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px\n")])])]),s("p",[t._v("这就是我们的作者样式，当作者样式和浏览器默认样式中的声明值有冲突时，会优先把作者样式中的声明值当作 "),s("em",[t._v("CSS")]),t._v(" 的属性值。")]),t._v(" "),s("p",[t._v("而 "),s("em",[t._v("font-weight")]),t._v(" 并没有和作者样式冲突，所以不受影响。")]),t._v(" "),s("p",[s("strong",[t._v("层叠冲突")])]),t._v(" "),s("p",[t._v("当样式表声明值有冲突时，就会使用层叠规则来确定 "),s("em",[t._v("CSS")]),t._v(" 的属性值")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("test"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".test h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("h1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在上面的代码中，两个选择器都选中了 "),s("em",[t._v("h1")]),t._v("，并且都设置了 "),s("em",[t._v("font-size")]),t._v(" 属性值，同属于作者样式，这显然就属于层叠冲突了。")]),t._v(" "),s("p",[t._v("当发送层叠冲突时，这时就要根据选择器的权重值来计算究竟运用哪一条作者样式。")]),t._v(" "),s("p",[t._v("落败的作者样式在 "),s("em",[t._v("Elements>Styles")]),t._v(" 中会被划掉")]),t._v(" "),s("img",{staticStyle:{zoom:"40%"},attrs:{src:"https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2021-09-16-071546.png",alt:"image-20210916151546500"}}),t._v(" "),s("p",[s("strong",[t._v("使用继承")])]),t._v(" "),s("p",[t._v("如果该条属性作者并没有设置，那么还不会着急去使用默认值，而是会去看一下能否继承到该属性值。例如：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("this is a test"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在上面的代码中，我们虽然没有在 "),s("em",[t._v("p")]),t._v(" 段落上书写 "),s("em",[t._v("color")]),t._v(" 属性，但是该属性能够从 "),s("em",[t._v("div")]),t._v(" 上面继承而来，所以最终计算出来的值就是 "),s("em",[t._v("red")])]),t._v(" "),s("p",[s("strong",[t._v("使用默认值")])]),t._v(" "),s("p",[t._v("最终，如果没有作者样式，该属性值也无法继承而来，则会使用浏览器的默认样式。")]),t._v(" "),s("h2",{attrs:{id:"真题解答"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#真题解答"}},[t._v("#")]),t._v(" 真题解答")]),t._v(" "),s("ul",[s("li",[t._v("请简述 "),s("em",[t._v("CSS")]),t._v(" 中属性的计算过程是怎样的")])]),t._v(" "),s("blockquote",[s("p",[t._v("参考答案：")]),t._v(" "),s("p",[t._v("1.确定声明值：参考样式表中没有冲突的声明，作为 "),s("em",[t._v("CSS")]),t._v(" 属性值")]),t._v(" "),s("p",[t._v("2.层叠冲突：对样式表有冲突的声明使用层叠规则，确定 "),s("em",[t._v("CSS")]),t._v(" 属性值")]),t._v(" "),s("p",[t._v("3.使用继承：对仍然没有值的属性，若可以继承则继承父元素的值")]),t._v(" "),s("p",[t._v("4.使用默认值：对仍然没有值得属性，全部使用默认属性值")])]),t._v(" "),s("p",[t._v("-"),s("em",[t._v("EOF")]),t._v("-")])])}),[],!1,null,null,null);s.default=e.exports}}]);