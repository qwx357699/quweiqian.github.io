(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{470:function(t,a,s){"use strict";s.r(a);var n=s(10),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[t._v("#")]),t._v(" 常见问题")]),t._v(" "),a("p",[t._v("最后，我们总结一些移动端经常容易被问到的问题。")]),t._v(" "),a("h3",{attrs:{id:"_1-300ms-延迟问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-300ms-延迟问题"}},[t._v("#")]),t._v(" 1. "),a("em",[t._v("300ms")]),t._v(" 延迟问题")]),t._v(" "),a("blockquote",[a("p",[a("strong",[a("em",[t._v("300ms")]),t._v(" 延迟问题产生原因？")])]),t._v(" "),a("p",[t._v("早在 2007 年初，苹果公司在发布首款 iPhone 前夕，遇到一个问题：当时的网站都是为大屏幕设备所设计的。于是苹果的工程师们做了一些约定，应对 iPhone 这种小屏幕浏览桌面端站点的问题。")]),t._v(" "),a("p",[t._v("这当中最出名的，当属双击缩放（ double tap to zoom ），这也是会有上述 300 毫秒延迟的主要原因。")]),t._v(" "),a("p",[t._v("双击缩放，顾名思义，即用手指在屏幕上快速点击两次，iOS 自带的 Safari 浏览器会将网页缩放至原始比例。 那么这和 300 毫秒延迟有什么联系呢？")]),t._v(" "),a("p",[t._v("假定这么一个场景： 用户在 iOS Safari 里边点击了一个链接。由于用户可以进行双击缩放或者双击滚动的操作，当用户一次点击屏幕之后，浏览器并不能立刻判断用户是确实要打开这个链接，还是想要进行双击操作。因此，iOS Safari 就等待 300 毫秒，以判断用户是否再次点击了屏幕。")]),t._v(" "),a("p",[t._v("鉴于 iPhone 的成功，其他移动浏览器都复制了 iPhone Safari 浏览器的多数约定，包括双击缩放，几乎现在所有的移动端浏览器都有这个功能。")]),t._v(" "),a("p",[a("strong",[t._v("如何解决 "),a("em",[t._v("300ms")]),t._v(" 延迟问题？")])]),t._v(" "),a("p",[t._v("方法一：禁止缩放（在 "),a("em",[t._v("meta")]),t._v(" 标签中设置）")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("viewport"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("user-scalable=no,initial-scale=1,maximun-scale=1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("p",[t._v("页面不可缩放，这样双击缩放功能就没有意义了，此时浏览器可以禁用默认的双击缩放行为并且去掉300ms的点击延迟。\n缺点：必须完全禁用缩放来达到目的，但是通常情况下，我们还是希望能通过双指来进行缩放的。")]),t._v(" "),a("p",[t._v("在 2014 年，从 Chrome32 开始 Google 已经解决这个 300ms 延迟问题，只要定义了 viewport 就不会有 300ms 延迟问题。")]),t._v(" "),a("p",[t._v("方法二：使用移动端专属的触摸事件\n使用触摸事件的能够提高页面响应速度，带来更好的用户体验。")])]),t._v(" "),a("h3",{attrs:{id:"_2-点击穿透问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-点击穿透问题"}},[t._v("#")]),t._v(" 2. 点击穿透问题")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("点击穿透问题？")])]),t._v(" "),a("p",[t._v("所谓事件穿透，是移动端上面一个非常有名的 "),a("em",[t._v("Bug")]),t._v("，其出现场景为：有两层重叠的元素，上面的元素有 "),a("em",[t._v("touch")]),t._v(" 事件（点击后要消失），下面是一个默认会触发 "),a("em",[t._v("click")]),t._v(" 事件的元素（"),a("em",[t._v("a")]),t._v("、表单元素、带 "),a("em",[t._v("click")]),t._v(" 事件的元素），此时点击上一层的元素，下一层也同样会被点击。")]),t._v(" "),a("p",[a("strong",[t._v("如何解决点击穿透问题？")])]),t._v(" "),a("p",[t._v("通过 "),a("em",[t._v("e.preventDefault( )")]),t._v(" 方法来阻止默认事件。")])]),t._v(" "),a("h3",{attrs:{id:"_3-解决-1px-问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-解决-1px-问题"}},[t._v("#")]),t._v(" 3. 解决 "),a("em",[t._v("1px")]),t._v(" 问题")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("什么是 "),a("em",[t._v("1px")]),t._v(" 问题？")])]),t._v(" "),a("p",[t._v("所谓 "),a("em",[t._v("1px")]),t._v(" 问题，是因为设备像素和 "),a("em",[t._v("CSS")]),t._v(" 像素并不是完全的 "),a("em",[t._v("1:1")]),t._v(" 的关系，有可能能是 "),a("em",[t._v("1:2")]),t._v(" 甚至是 "),a("em",[t._v("1:3")]),t._v("，因此我们按照以前在 PC 端的编程经验，书写 1px 可能会比实际的看着要粗一些。")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1px")]),t._v(" 问题解决方案？")]),t._v("\n使用 "),a("em",[t._v("JavaScript")]),t._v(" 计算 "),a("em",[t._v("rem")]),t._v(" 基准值。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("doc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" win"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" designWidth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" html "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" doc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取 html 根元素，一会儿要设置根元素的字体大小")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("refreshRem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientWidth"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取 CSS 像素（设备的宽度）")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" designWidth"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 说明设备宽度都已经大于设计稿，测量出来是多少就是多少")]),t._v("\n     html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fontSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'100px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 计算比例")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拿 iPhone6（375px） 375px/750px = 0.5 -> 1/DPR")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 相当于现在每一列的宽度为 0.5px，相当于分成了 375px/0.5 = 750列")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 但是现在我们设置 font-size 为 0.5px 浏览器不允许设置这么小的，因此乘以一个 100")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每一列的宽度就变为了 50px，375px/50 = 7.5列")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 假设设计稿量出来的是 375px->设备像素187.5px->187.5/50(每一列的宽度)->3.75(所占列数)->3.75rem")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 假设量出来是 100px -> 1列")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 100px->50px/50px->1->1rem")]),t._v("\n     html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fontSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" designWidth"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ndoc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DOMContentLoaded"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" refreshRem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("750")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("h3",{attrs:{id:"_4-移动端-app-有哪些类型-区别是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-移动端-app-有哪些类型-区别是什么"}},[t._v("#")]),t._v(" 4. 移动端 "),a("em",[t._v("APP")]),t._v(" 有哪些类型，区别是什么？")]),t._v(" "),a("blockquote",[a("p",[t._v("移动端应用细分为三大类："),a("em",[t._v("WebApp")]),t._v("、"),a("em",[t._v("NativeApp")]),t._v(" 和 "),a("em",[t._v("HybridApp")]),t._v("\nWebApp、NativeApp 和 HybridApp 三类移动应用的特点：")]),t._v(" "),a("ul",[a("li",[t._v("Web App 指的是移动端的 Web 浏览器，其实和 PC 端的 Web 浏览器没有任何区别，只不过 Web 浏览器所依附的操作系统不再是 Windows 和 Linux 了，而是 iOS 和 Android，Web App 采用的技术主要是，传统的 HTML、JavaScript、CSS 等 Web 技术栈，当然现在 HTML5 也得到了广泛的应用。另外，Web App 所访问的页面内容都是放在服务器端的，本质上就是 Web 网页，所以天生就是跨平台的。不能在商店中下载，只能在移动设备浏览器中打开")]),t._v(" "),a("li",[t._v("Native App 指的是移动端的原生应用，对于 Android 是 apk，对于 iOS 就是 ipa。Native App 是一种基于手机操作系统（iOS 和 Android），并使用原生程序编写运行的第三方应用程序，Native App 的开发，Android 使用的语言通常是 Java，iOS 使用的语言是 Objective-C。通常来说，Native App 可以提供比较好的用户体验以及性能，而且可以方便地操作手机本地资源，可在应用商店内进行下载，以 app 的形式打包")]),t._v(" "),a("li",[t._v("Hybrid App，俗称混血应用，是介于 Web App 和 Native App 两者之间的一种 App 形式，Hybrid App 利用了 Web App 和 Native App 的优点，通过一个原生实现的 Native Container 展示 HTML5 的页面。更通俗的讲法可以归结为，在原生移动应用中嵌入了 Webview，然后通过该 Webview 来访问网页，HybridApp 具有维护更新简单，用户体验优异以及较好的跨平台特性，是目前主流的移动应用开发模式，可在应用商店内进行下载，以 app 的形式打开")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);