(window.webpackJsonp=window.webpackJsonp||[]).push([[430],{802:function(v,_,l){"use strict";l.r(_);var t=l(10),i=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("ol",[_("li",[_("p",[v._v("提示用户输入数组的长度，以及数组每一项的值，然后输出该数组")])]),v._v(" "),_("li",[_("p",[v._v("初始化一个数字数组，然后求该数组所有项之和")])]),v._v(" "),_("li",[_("p",[v._v("初始化一个数字数组，然后输出数组中所有的奇数")])]),v._v(" "),_("li",[_("p",[v._v("初始化一个数字数组，然后输出数组中所有的素数")])]),v._v(" "),_("li",[_("p",[v._v("斐波拉契数列是这样一种数列：1  1  2  3  5  8  13 ......\n数列前两位为1，第n位=第n-1位+第n-2位\n让用户输入斐波拉契数列的长度，在控制台中打印该长度的斐波拉契数列")])]),v._v(" "),_("li",[_("p",[v._v("定义一个用户数组，数组的每一项是一个用户对象，用户对象中包含账号和密码，随意初始化一些对象放入数组中。然后提示用户输入账号和密码，判断是否登录成功")])]),v._v(" "),_("li",[_("p",[v._v("初始化一个5*5的二维数组，数组每一项是一个数字，计算对角线之和")])]),v._v(" "),_("li",[_("p",[v._v("初始化一个数字数组（数据随意），对该数组进行升序排序，然后输出结果")])])]),v._v(" "),_("p",[v._v("思路提示：")]),v._v(" "),_("p",[v._v("数组的排序有多种算法可以完成，这里介绍其中一种：冒泡排序算法")]),v._v(" "),_("p",[v._v("冒泡排序算法的原理如下：")]),v._v(" "),_("ul",[_("li",[v._v("比较相邻的元素。如果第一个比第二个大，就交换他们两个。")]),v._v(" "),_("li",[v._v("对每一对相邻元素做同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。")]),v._v(" "),_("li",[v._v("针对所有的元素重复以上的步骤，除了已排好序的元素。")])]),v._v(" "),_("ol",{attrs:{start:"9"}},[_("li",[v._v("有一个数组，存放了一些数字，找出出现频率最高的数字")])])])}),[],!1,null,null,null);_.default=i.exports}}]);