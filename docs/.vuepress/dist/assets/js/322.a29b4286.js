(window.webpackJsonp=window.webpackJsonp||[]).push([[322],{689:function(t,a,s){"use strict";s.r(a);var n=s(10),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"扩展-类型化数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展-类型化数组"}},[t._v("#")]),t._v(" [扩展]类型化数组")]),t._v(" "),a("h2",{attrs:{id:"数字存储的前置知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字存储的前置知识"}},[t._v("#")]),t._v(" 数字存储的前置知识")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("计算机必须使用固定的位数来存储数字，无论存储的数字是大是小，在内存中占用的空间是固定的。")])]),t._v(" "),a("li",[a("p",[t._v("n位的无符号整数能表示的数字是2^n个，取值范围是：0 ~ 2^n - 1")])]),t._v(" "),a("li",[a("p",[t._v("n位的有符号整数能表示的数字是2^n个，取值范围是：-2^(n-1) ~ 2^(n-1) - 1")])]),t._v(" "),a("li",[a("p",[t._v("浮点数表示法可以用于表示整数和小数，目前分为两种标准：")]),t._v(" "),a("ol",[a("li",[t._v("32位浮点数：又称为单精度浮点数，它用1位表示符号，8位表示阶码，23位表示尾数")]),t._v(" "),a("li",[t._v("64位浮点数：又称为双精度浮点数，它用1位表示符号，11位表示阶码，52位表示尾数")])])]),t._v(" "),a("li",[a("p",[t._v("JS中的所有数字，均使用双精度浮点数保存")])])]),t._v(" "),a("h2",{attrs:{id:"类型化数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型化数组"}},[t._v("#")]),t._v(" 类型化数组")]),t._v(" "),a("p",[t._v("类型化数组：用于优化多个数字的存储")]),t._v(" "),a("p",[t._v("具体分为：")]),t._v(" "),a("ul",[a("li",[t._v("Int8Array： 8位有符号整数（-128 ~ 127）")]),t._v(" "),a("li",[t._v("Uint8Array： 8位无符号整数（0 ~ 255）")]),t._v(" "),a("li",[t._v("Int16Array: ...")]),t._v(" "),a("li",[t._v("Uint16Array: ...")]),t._v(" "),a("li",[t._v("Int32Array: ...")]),t._v(" "),a("li",[t._v("Uint32Array: ...")]),t._v(" "),a("li",[t._v("Float32Array:")]),t._v(" "),a("li",[t._v("Float64Array")])]),t._v(" "),a("ol",[a("li",[t._v("如何创建数组")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("数组构造函数")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("长度"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n数组构造函数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("元素"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n数组构造函数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("可迭代对象"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("数组构造函数")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("其他类型化数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("得到长度")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//得到元素数量")]),t._v("\n数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("byteLength "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//得到占用的字节数")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("其他的用法跟普通数组一致，但是：")])]),t._v(" "),a("ul",[a("li",[t._v("不能增加和删除数据，类型化数组的长度固定")]),t._v(" "),a("li",[t._v("一些返回数组的方法，返回的数组是同类型化的新数组")])])])}),[],!1,null,null,null);a.default=r.exports}}]);