(window.webpackJsonp=window.webpackJsonp||[]).push([[345],{711:function(_,v,t){"use strict";t.r(v);var l=t(10),s=Object(l.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"_5-6-类的继承"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-类的继承"}},[_._v("#")]),_._v(" 5-6. 类的继承")]),_._v(" "),v("p",[_._v("如果两个类A和B，如果可以描述为：B 是 A，则，A和B形成继承关系")]),_._v(" "),v("p",[_._v("如果B是A，则：")]),_._v(" "),v("ol",[v("li",[_._v("B继承自A")]),_._v(" "),v("li",[_._v("A派生B")]),_._v(" "),v("li",[_._v("B是A的子类")]),_._v(" "),v("li",[_._v("A是B的父类")])]),_._v(" "),v("p",[_._v("如果A是B的父类，则B会自动拥有A中的所有实例成员。")]),_._v(" "),v("p",[_._v("新的关键字：")]),_._v(" "),v("ul",[v("li",[_._v("extends：继承，用于类的定义")]),_._v(" "),v("li",[_._v("super\n"),v("ul",[v("li",[_._v("直接当作函数调用，表示父类构造函数")]),_._v(" "),v("li",[_._v("如果当作对象使用，则表示父类的原型")])])])]),_._v(" "),v("p",[_._v("注意：ES6要求，如果定义了constructor，并且该类是子类，则必须在constructor的第一行手动调用父类的构造函数")]),_._v(" "),v("p",[_._v("如果子类不写constructor，则会有默认的构造器，该构造器需要的参数和父类一致，并且自动调用父类构造器")]),_._v(" "),v("p",[_._v("【冷知识】")]),_._v(" "),v("ul",[v("li",[_._v("用JS制作抽象类\n"),v("ul",[v("li",[_._v("抽象类：一般是父类，不能通过该类创建对象")])])]),_._v(" "),v("li",[_._v("正常情况下，this的指向，this始终指向具体的类的对象")])])])}),[],!1,null,null,null);v.default=s.exports}}]);