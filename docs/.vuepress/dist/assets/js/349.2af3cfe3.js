(window.webpackJsonp=window.webpackJsonp||[]).push([[349],{722:function(t,a,s){"use strict";s.r(a);var r=s(10),v=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"迭代器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迭代器"}},[t._v("#")]),t._v(" 迭代器")]),t._v(" "),a("h2",{attrs:{id:"背景知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景知识"}},[t._v("#")]),t._v(" 背景知识")]),t._v(" "),a("ol",[a("li",[t._v("什么是迭代？")])]),t._v(" "),a("p",[t._v("从一个数据集合中按照一定的顺序，不断取出数据的过程")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("迭代和遍历的区别？")])]),t._v(" "),a("p",[t._v("迭代强调的是依次取数据，并不保证取多少，也不保证把所有的数据取完")]),t._v(" "),a("p",[t._v("遍历强调的是要把整个数据依次全部取出")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("迭代器")])]),t._v(" "),a("p",[t._v("对迭代过程的封装，在不同的语言中有不同的表现形式，通常为对象")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("迭代模式")])]),t._v(" "),a("p",[t._v("一种设计模式，用于统一迭代过程，并规范了迭代器规格：")]),t._v(" "),a("ul",[a("li",[t._v("迭代器应该具有得到下一个数据的能力")]),t._v(" "),a("li",[t._v("迭代器应该具有判断是否还有后续数据的能力")])]),t._v(" "),a("h2",{attrs:{id:"js中的迭代器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js中的迭代器"}},[t._v("#")]),t._v(" JS中的迭代器")]),t._v(" "),a("p",[t._v("JS规定，如果一个对象具有next方法，并且该方法返回一个对象，该对象的格式如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("done")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 是否迭代完成"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("则认为该对象是一个迭代器")]),t._v(" "),a("p",[t._v("含义：")]),t._v(" "),a("ul",[a("li",[t._v("next方法：用于得到下一个数据")]),t._v(" "),a("li",[t._v("返回的对象\n"),a("ul",[a("li",[t._v("value：下一个数据的值")]),t._v(" "),a("li",[t._v("done：boolean，是否迭代完成")])])])])])}),[],!1,null,null,null);a.default=v.exports}}]);