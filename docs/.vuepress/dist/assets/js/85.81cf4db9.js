(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{459:function(e,t,v){"use strict";v.r(t);var o=v(10),r=Object(o.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"ppk-viewport-p2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ppk-viewport-p2"}},[e._v("#")]),e._v(" ppk-viewport-p2")]),e._v(" "),t("p",[e._v("在这个迷你系列中，我将解释视口和各种重要元素的宽度是如何工作的，比如<html>元素，以及窗口和屏幕。")]),e._v(" "),t("p",[e._v("在这一页，我们将讨论移动浏览器。如果你完全不熟悉移动设备，我建议你先阅读关于桌面浏览器的第一部分，以便在熟悉的环境中打下基础。")]),e._v(" "),t("h2",{attrs:{id:"the-problem-of-mobile-browsers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-problem-of-mobile-browsers"}},[e._v("#")]),e._v(" The problem of mobile browsers")]),e._v(" "),t("p",[e._v("当我们比较手机浏览器和桌面浏览器时，最明显的("),t("em",[e._v("significantly")]),e._v(")区别是屏幕大小。对于pc网页，移动浏览器显示明显少于桌面浏览器;要么将文本缩小到难以阅读的("),t("em",[e._v("unreadably")]),e._v(")程度，要么在屏幕上只显示的网页的一小部分。")]),e._v(" "),t("p",[e._v("手机屏幕比桌面屏幕小得多;思索了下，最大400px的宽度，有时更小。(有些手机传闻的宽度更大，但他们在撒谎("),t("em",[e._v("lying")]),e._v(") — 或者至少给我们提供了无用的信息。)")]),e._v(" "),t("p",[e._v("处于中间层("),t("em",[e._v("intermediate layer")]),e._v(")的平板设备，如iPad或传言中("),t("em",[e._v("rumoured")]),e._v(")的惠普基于webos的平板设备，将弥合("),t("em",[e._v("bridge the gap")]),e._v(")台式机和移动设备之间的鸿沟，但这并不能改变根本("),t("em",[e._v("fundamental")]),e._v(")问题。网站也必须在移动设备上运行，所以我们必须让它们在小屏幕上显示良好。")]),e._v(" "),t("p",[e._v("最重要的问题集中在CSS上，尤其是视口的尺寸。如果我们一对一地复制桌面模型，我们的CSS就会开始可怕地失败("),t("em",[e._v("misfire horrendously")]),e._v(")。")]),e._v(" "),t("p",[e._v("让我们回到宽度为"),t("code",[e._v("width:10%")]),e._v("的侧边栏。如果移动浏览器的效果和桌面浏览器完全一样，那么他们最多只能让元素的宽度达到40px，这实在是太窄了。你的流式布局看起来会被压扁("),t("em",[e._v("squashed")]),e._v(")。")]),e._v(" "),t("p",[e._v("解决这个问题的一个方法是为移动浏览器建立一个专门的网站。即使撇开是否应该这样做的基本问题不谈，实际的问题是，只有极少数网站所有者充分了解("),t("em",[e._v("sufficiently clued-in")]),e._v(")如何专门迎合("),t("em",[e._v("cater")]),e._v(")移动设备。")]),e._v(" "),t("p",[e._v("移动浏览器厂商希望为他们的客户提供最好的体验("),t("em",[e._v("best possible experience")]),e._v(")，这就意味着“尽可能地像桌面浏览器一样”。因此("),t("em",[e._v("Hence")]),e._v(")，耍点花招("),t("em",[e._v("sleight of hand")]),e._v(")是必要的。")]),e._v(" "),t("h2",{attrs:{id:"the-two-viewports"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-two-viewports"}},[e._v("#")]),e._v(" The two viewports")]),e._v(" "),t("p",[e._v("因此，视口太窄，无法作为CSS布局的基础。最明显的解决方案是使视口更宽。然而，这需要将其分成两个:"),t("strong",[e._v("视觉视口(visual viewport)"),t("strong",[e._v("和")]),e._v("布局视口(layout viewport)")]),e._v("。")]),e._v(" "),t("p",[e._v("George Cummins在"),t("a",{attrs:{href:"https://stackoverflow.com/questions/6333927/difference-between-visual-viewport-and-layout-viewport",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stack Overflow"),t("OutboundLink")],1),e._v("中对基本概念的解释最好:")]),e._v(" "),t("p",[e._v('"想象布局视口是一个不改变大小和形状的大图像。现在你有一个更小的框架，通过它你可以看到大图。这个小框架被不透明的材料('),t("em",[e._v("opaque material")]),e._v(")包围着，除了大图像的一部分("),t("em",[e._v("a portion of")]),e._v(")，你看不见("),t("em",[e._v("obscures your view")]),e._v(")所有的东西。您可以通过框架看到的大图部分是"),t("em",[e._v("visual viewport")]),e._v("。你可以在握住画面的同时远离("),t("em",[e._v("back away from")]),e._v(")大图(缩小)，一次看到整个图像，或者你可以靠近一点(放大)，只看到一部分("),t("em",[e._v("portion")]),e._v(")。你也可以改变框架的方向("),t("em",[e._v("orientation切换横竖屏")]),e._v(")，但是大图像("),t("em",[e._v("layout viewport")]),e._v(')大小不能改变"')]),e._v(" "),t("p",[e._v("另请参阅Chris的"),t("a",{attrs:{href:"https://stackoverflow.com/questions/7344886/visual-viewport-vs-layout-viewport-on-mobile-devices",target:"_blank",rel:"noopener noreferrer"}},[e._v("解释"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[t("strong",[e._v("visual viewport")]),e._v(" 是当前显示在屏幕上的页面的一部分。用户可以滚动来改变他看到的页面部分，或者"),t("strong",[e._v("缩放来改变 visual viewport 的尺寸。")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://www.quirksmode.org/mobile/pix/viewport/mobile_visualviewport.jpg",alt:""}})]),e._v(" "),t("p",[e._v("然而，CSS布局中，特别是百分比宽度，是相对于 "),t("strong",[e._v("layout viewport")]),e._v(" 计算的，它比可视视口宽得多。")]),e._v(" "),t("p",[e._v("因此，<html>元素初始采用 layout viewport 的宽度，并且CSS被解释为好像屏幕比手机屏幕宽得多。这使得您的站点布局的行为像在桌面浏览器上一样。")]),e._v(" "),t("p",[e._v("布局视窗有多宽?这因浏览器而异。Safari iPhone使用 980px, Opera 850px, Android WebKit 800px, IE 974px。")]),e._v(" "),t("p",[e._v("一些浏览器有特殊的行为:")]),e._v(" "),t("ul",[t("li",[e._v("Symbian WebKit 试图保持布局视窗等于可视视窗，是的，这意味着具有百分比宽度的元素可能会表现得很奇怪。但是，如果页面由于绝对宽度而无法放入可视视口，则浏览器将布局视口拉伸到最大850px。")]),e._v(" "),t("li",[e._v("三星WebKit(在bada上)使布局视口与最宽的元素一样宽。")]),e._v(" "),t("li",[e._v("在黑莓上，布局视窗等于100%缩放的视觉视窗。这种情况就是没有变动。")])]),e._v(" "),t("h2",{attrs:{id:"zooming"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zooming"}},[e._v("#")]),e._v(" Zooming")]),e._v(" "),t("p",[e._v("显然，两类视口都是以"),t("strong",[e._v("CSS像素")]),e._v("来衡量的。但是，虽然 "),t("strong",[e._v("visual viewport尺寸随着缩放而改变")]),e._v("(如果您放大，屏幕对应的CSS像素就会减少)，但"),t("strong",[e._v("layout viewport 尺寸保持不变")]),e._v("。(如果他们不这样做，你的页面将不断reflow，因为百分比宽度被重新计算。)")]),e._v(" "),t("h3",{attrs:{id:"理解layout-viewport"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#理解layout-viewport"}},[e._v("#")]),e._v(" 理解layout viewport")]),e._v(" "),t("p",[e._v("为了理解布局视窗的大小，我们必须看看当页面完全缩小时会发生什么。许多移动浏览器初始化时使用完全缩小模式显示任何页面。")]),e._v(" "),t("p",[e._v("**关键点是：**浏览器已经选择了布局视口("),t("em",[e._v("layout viewport")]),e._v(")的尺寸，这样它就可以在完全缩小模式下完全覆盖屏幕("),t("strong",[e._v("因此等于可视视口("),t("em",[e._v("visual viewport")]),e._v(")")]),e._v(")。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://www.quirksmode.org/mobile/pix/viewport/mobile_viewportzoomedout.jpg",alt:""}})]),e._v(" "),t("p",[e._v("因此，布局视口("),t("em",[e._v("layout viewport")]),e._v(")的宽度和高度等于在最大缩放模式下可以在屏幕上显示的内容。当用户放大时，这些维度保持不变。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://www.quirksmode.org/mobile/pix/viewport/mobile_layoutviewport.jpg",alt:""}})]),e._v(" "),t("p",[e._v("布局视口("),t("em",[e._v("layout viewport")]),e._v(")宽度总是相同的。如果你旋转你的手机，可视视口("),t("em",[e._v("visual viewport")]),e._v(")会改变，但是浏览器会通过稍微放大来适应这个新的方向，这样布局视口就会再次和可视视口一样宽。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://www.quirksmode.org/mobile/pix/viewport/mobile_viewportzoomedout_la.jpg",alt:""}})]),e._v(" "),t("p",[e._v("这对布局视窗的高度产生了影响，它现在比纵向模式的高度要小得多。但是web开发人员并不关心高度，只关心宽度。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://www.quirksmode.org/mobile/pix/viewport/mobile_layoutviewport_la.jpg",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"measuring-the-layout-viewport"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#measuring-the-layout-viewport"}},[e._v("#")]),e._v(" Measuring the layout viewport")]),e._v(" "),t("p",[e._v("现在我们有两个想要测量的视口。因此，非常幸运的是，浏览器战争给了我们两个属性对。")]),e._v(" "),t("p",[t("code",[e._v("document.documentElement.clientWidth")]),e._v(" and "),t("code",[e._v("-Height")]),e._v("包含layout viewport的尺寸。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://www.quirksmode.org/mobile/pix/viewport/mobile_client.jpg",alt:""}})]),e._v(" "),t("p",[e._v("旋转方向与高度有关，但与宽度无关。("),t("em",[e._v("旋转后高变了，width不变")]),e._v(")")]),e._v(" "),t("p",[t("em",[e._v("The orientation matters for the height, but not for the width.")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://www.quirksmode.org/mobile/pix/viewport/mobile_client_la.jpg",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"measuring-the-visual-viewport"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#measuring-the-visual-viewport"}},[e._v("#")]),e._v(" Measuring the visual viewport")]),e._v(" "),t("p",[e._v("至于 visual viewport，它是由"),t("code",[e._v("window.innerWidth/Height")]),e._v("测量的。显然，当用户缩小或放大时，导致了多一点或少一点CSS像素适配了屏幕，那么测量值会发生变化。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://www.quirksmode.org/mobile/pix/viewport/mobile_inner.jpg",alt:""}})]),e._v(" "),t("p",[e._v("不幸的是，这是一个不兼容的领域;许多浏览器仍然需要添加对 visual viewport 测量的支持。但是，没有浏览器将这个度量值存储在任何其他属性对中，所以我猜是"),t("code",[e._v("window.innerWidth/Height")]),e._v("是一个标准，尽管支持很差。")]),e._v(" "),t("p",[t("em",[e._v("现在有个实验性的功能"),t("code",[e._v("VisualViewport")]),e._v(","),t("code",[e._v("VisualViewport.width")]),e._v("可以获取 visual viewport 宽度")])]),e._v(" "),t("h2",{attrs:{id:"the-screen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-screen"}},[e._v("#")]),e._v(" The screen")]),e._v(" "),t("p",[e._v("在桌面， "),t("code",[e._v("screen.width/height")]),e._v("给出屏幕尺寸，以设备像素为单位。与桌面一样，作为web开发人员，您永远不需要这些信息。您对屏幕的物理尺寸不感兴趣，而是对当前屏幕上适合多少CSS像素感兴趣。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://www.quirksmode.org/mobile/pix/viewport/mobile_screen.jpg",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"the-zoom-level"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-zoom-level"}},[e._v("#")]),e._v(" The zoom level")]),e._v(" "),t("p",[e._v("直接读出缩放级别是不可能的，但你可以通过"),t("code",[e._v("screen.width/window.innerWidth")]),e._v("得到它。当然，这只有在两个属性都得到完全支持的情况下才有效。")]),e._v(" "),t("p",[e._v("幸运的是，缩放级别并不重要。您需要知道的是当前屏幕上适合多少CSS像素。你可以从"),t("code",[e._v("window.innerWidth")]),e._v("中得到这些信息。 - 如果它被正确支持。")]),e._v(" "),t("h2",{attrs:{id:"scrolling-offset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scrolling-offset"}},[e._v("#")]),e._v(" Scrolling offset")]),e._v(" "),t("p",[e._v("你还需要知道的是视觉视口相对于布局视口的当前位置。这是滚动偏移量，就像在桌面上一样，它被存储在"),t("code",[e._v("window.pageX/YOffset")]),e._v("中。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://www.quirksmode.org/mobile/pix/viewport/mobile_page.jpg",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"html-element"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#html-element"}},[e._v("#")]),e._v(" "),t("code",[e._v("<html>")]),e._v(" element")]),e._v(" "),t("p",[e._v("就像在桌面上一样，"),t("code",[e._v("document.documentElement.offsetWidth/Height")]),e._v("给出<html>元素的总大小(以CSS像素为单位)。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://www.quirksmode.org/mobile/pix/viewport/mobile_offset.jpg",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"media-queries"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#media-queries"}},[e._v("#")]),e._v(" Media queries")]),e._v(" "),t("p",[e._v("媒体查询的工作方式与桌面相同。"),t("code",[e._v("width/height")]),e._v("使用布局视口作为参考并以CSS像素测量，"),t("code",[e._v("device-width/height")]),e._v("使用设备屏幕并以设备像素测量。")]),e._v(" "),t("p",[e._v("换句话说，"),t("code",[e._v("width/height")]),e._v("反映了"),t("code",[e._v("documentElement.clientWidth/Height")]),e._v("的值。而"),t("code",[e._v("device-width/Height")]),e._v("反映"),t("code",[e._v("screen.width/Height")]),e._v("的值。(它们实际上在所有浏览器中都这样做，即使镜像值不正确。)")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://www.quirksmode.org/mobile/pix/viewport/mobile_mediaqueries.jpg",alt:""}})]),e._v(" "),t("p",[t("em",[e._v("Now which measurement is more useful to us web developers? Point is, I don’t know.")])]),e._v(" "),t("p",[e._v("我一开始认为"),t("code",[e._v("device-width")]),e._v("是最重要的，因为它给了我们一些关于我们可能会使用的设备的信息。例如，您可以改变布局的宽度以适应设备的宽度。然而，你也可以通过使用"),t("code",[e._v("<meta viewport>")]),e._v(";使用"),t("code",[e._v("device-width")]),e._v("媒体查询并不是绝对必要的。")]),e._v(" "),t("p",[e._v("那么，"),t("code",[e._v("width")]),e._v("究竟是更重要的媒体查询吗?也许;它提供了浏览器供应商一些线索("),t("em",[e._v("clue")]),e._v(")，认为这是一个合适宽度对于在设备上网站来说。但这是相当模糊的("),t("em",[e._v("vague")]),e._v(")，"),t("code",[e._v("width")]),e._v("媒体查询并没有真正给出任何其他信息。")]),e._v(" "),t("p",[e._v("所以我还没决定。目前，我认为媒体查询对于判断你是在台式机、平板电脑还是移动设备上很重要，但对于区分不同的平板电脑或移动设备并不是很有用。")]),e._v(" "),t("p",[e._v("Or something.")]),e._v(" "),t("h2",{attrs:{id:"event-coordinates"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#event-coordinates"}},[e._v("#")]),e._v(" Event coordinates")]),e._v(" "),t("p",[e._v("Event坐标的工作或多或少与桌面相同。不幸的是，在12个被测试的浏览器中，只有两个，Symbian WebKit和Iris，完全正确地处理了这三个问题。所有其他浏览器或多或少都有严重的问题。")]),e._v(" "),t("p",[t("code",[e._v("pageX/Y")]),e._v("仍然是相对于页面的CSS像素，这是迄今为止三个属性对中最有用的，就像在桌面上一样。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://www.quirksmode.org/mobile/pix/viewport/mobile_pageXY.jpg",alt:""}})]),e._v(" "),t("p",[t("code",[e._v("clientX/Y")]),e._v("是相对于可视视窗的CSS像素。这是有道理的，尽管我不完全确定它有什么好处。")]),e._v(" "),t("p",[t("code",[e._v("screenX/Y")]),e._v("是相对于屏幕的设备像素。当然，这与"),t("code",[e._v("clientX/Y")]),e._v("使用的是相同的引用，设备像素是无用的。所以我们不需要担心 "),t("code",[e._v("screenX/Y")]),e._v(";它和桌面电脑一样没用。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://www.quirksmode.org/mobile/pix/viewport/mobile_clientXY.jpg",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"meta-viewport"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#meta-viewport"}},[e._v("#")]),e._v(" Meta viewport")]),e._v(" "),t("p",[e._v("最后，让我们来讨论一下"),t("code",[e._v('<meta name="viewport" content="width=320">')]),e._v(";最初是苹果的扩展，但同时被许多浏览器复制。这意味着调整"),t("code",[e._v("layout viewport")]),e._v("的大小。为了理解为什么这是必要的，让我们后退一步。")]),e._v(" "),t("p",[e._v("假设您构建了一个简单的页面，并且元素没有"),t("code",[e._v("width")]),e._v("。现在它们伸展到"),t("code",[e._v("layout viewport")]),e._v("宽度的100%。大多数浏览器会缩小屏幕以显示整个布局视口，产生如下效果:")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://www.quirksmode.org/mobile/pix/viewport/mq_none.jpg",alt:""}})]),e._v(" "),t("p",[e._v("所有用户都会立即放大，这是可行的，但大多数浏览器保持元素的宽度不变，这使得文本难以阅读。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://www.quirksmode.org/mobile/pix/viewport/mq_none_zoomed.jpg",alt:""}})]),e._v(" "),t("p",[e._v("(这里有一个明显的例外是Android WebKit，它实际上减少了包含文本的元素的大小，以便它们适合屏幕。这绝对是辉煌的，我觉得所有其他浏览器应该复制这种行为。稍后我会详细说明。)")]),e._v(" "),t("p",[e._v("现在你可以尝试设置"),t("code",[e._v("html {width: 320px}")]),e._v("。现在"),t("code",[e._v("\\<html>")]),e._v("元素缩小了，所有其他元素也随之缩小，这些元素现在占320px的100%。这在用户放大时有效，但在初始阶段则不行，因为用户面对的是一个缩小的页面，几乎不包含任何内容。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://www.quirksmode.org/mobile/pix/viewport/mq_html300.jpg",alt:""}})]),e._v(" "),t("p",[e._v("为了解决这个问题，苹果发明了meta视口标签。当你设置"),t("code",[e._v('<meta name="viewport" content="width=320">')]),e._v("时，你设置了layout viewport的宽度为320px。现在页面的初始状态也是正确的。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://www.quirksmode.org/mobile/pix/viewport/mq_yes.jpg",alt:""}})]),e._v(" "),t("p",[e._v("您可以将"),t("code",[e._v("layout viewport")]),e._v("的宽度设置为您想要的任何尺寸，包括"),t("code",[e._v("device-width")]),e._v("。使用"),t("code",[e._v("device-width")]),e._v("将会用"),t("code",[e._v("screen.width")]),e._v("(设备像素)作为参考，并相应地调整"),t("code",[e._v("layout viewport")]),e._v("的大小。")]),e._v(" "),t("p",[e._v("不过，这里有一个问题。有时正式的宽度"),t("code",[e._v("screen.width")]),e._v("没有多大意义，因为像素数太高了。例如，Nexus One的正式宽度为480px，但谷歌工程师认为，当使用"),t("code",[e._v("device-width")]),e._v("时，给"),t("code",[e._v("layout viewport")]),e._v("设置480px的宽度太大了。他们把它缩小到2/3，所以"),t("code",[e._v("device-width")]),e._v("给你的宽度是320px，就像在iPhone上一样。")]),e._v(" "),t("p",[e._v("如果像传言所说的那样，新iPhone将拥有更大的像素(这并不一定等于更大的屏幕!)，我不会对苹果效仿这一行为感到惊讶。也许最后"),t("code",[e._v("device-width")]),e._v("的意思是320px。")]),e._v(" "),t("h2",{attrs:{id:"related-research"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#related-research"}},[e._v("#")]),e._v(" Related research")]),e._v(" "),t("p",[e._v("有几个相关的课题需要进一步研究:")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("位置:固定的。正如我们所知，固定元素是相对于视口定位的。但相对于哪个视口呢?")]),e._v(" "),t("p",[e._v("同时我也做了这个"),t("a",{attrs:{href:"https://www.quirksmode.org/blog/archives/2010/12/the_fifth_posit.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("研究"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("blockquote",[t("p",[t("em",[t("a",{attrs:{href:"https://juejin.cn/post/6844904046663303181",target:"_blank",rel:"noopener noreferrer"}},[e._v("fixed 元素一定是相对视口定位的吗？ - 掘金 (juejin.cn)"),t("OutboundLink")],1)])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block",target:"_blank",rel:"noopener noreferrer"}},[e._v("Layout and the containing block - CSS: Cascading Style Sheets | MDN (mozilla.org)"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.quirksmode.org/mobile/viewports2.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("原文 A tale of two viewports — part two (quirksmode.org)"),t("OutboundLink")],1)])])])])}),[],!1,null,null,null);t.default=r.exports}}]);