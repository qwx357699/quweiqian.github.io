(window.webpackJsonp=window.webpackJsonp||[]).push([[371],{765:function(t,s,n){"use strict";n.r(s);var o=n(10),v=Object(o.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"使用const声明常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用const声明常量"}},[t._v("#")]),t._v(" 使用const声明常量")]),t._v(" "),s("p",[t._v("const和let完全相同，仅在于用const声明的变量，必须在声明时赋值，而且不可以重新赋值。")]),t._v(" "),s("p",[t._v("实际上，在开发中，应该尽量使用const来声明变量，以保证变量的值不会随意篡改，原因如下：")]),t._v(" "),s("ol",[s("li",[t._v("根据经验，开发中的很多变量，都是不会更改，也不应该更改的。")]),t._v(" "),s("li",[t._v("后续的很多框架或者是第三方JS库，都要求数据不可变，使用常量可以一定程度上保证这一点。")])]),t._v(" "),s("p",[t._v("注意的细节：")]),t._v(" "),s("ol",[s("li",[t._v("常量不可变，是指声明的常量的内存空间不可变，并不保证内存空间中的地址指向的其他空间不可变。")]),t._v(" "),s("li",[t._v("常量的命名\n"),s("ol",[s("li",[t._v("特殊的常量：该常量从字面意义上，一定是不可变的，比如圆周率、月地距地或其他一些绝不可能变化的配置。通常，"),s("strong",[t._v("该常量的名称全部使用大写，多个单词之间用下划线分割")])]),t._v(" "),s("li",[t._v("普通的常量：使用和之前一样的命名即可")])])]),t._v(" "),s("li",[t._v("在for循环中，循环变量不可以使用常量")])])])}),[],!1,null,null,null);s.default=v.exports}}]);