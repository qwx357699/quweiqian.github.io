(window.webpackJsonp=window.webpackJsonp||[]).push([[433],{803:function(v,_,t){"use strict";t.r(_);var s=t(10),a=Object(s.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"作用域和闭包"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#作用域和闭包"}},[v._v("#")]),v._v(" 作用域和闭包")]),v._v(" "),_("h2",{attrs:{id:"作用域"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[v._v("#")]),v._v(" 作用域")]),v._v(" "),_("p",[v._v("作用域表示一个代码区域，也表示一个运行环境")]),v._v(" "),_("p",[v._v("JS中，有两种作用域：")]),v._v(" "),_("ol",[_("li",[v._v("全局作用域")])]),v._v(" "),_("p",[v._v("直接在脚本中书写的代码")]),v._v(" "),_("p",[v._v("在全局作用域中声明的变量，会被提升到脚本块的顶部，并且会成为全局对象的属性。")]),v._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[v._v("函数作用域")])]),v._v(" "),_("p",[v._v("函数中的代码")]),v._v(" "),_("p",[v._v("在函数作用域中声明的变量，会被提升到函数的顶部，并且不会成为全局对象的属性.")]),v._v(" "),_("p",[_("strong",[v._v("因此，函数中声明的变量不会导致全局对象的污染")])]),v._v(" "),_("p",[_("strong",[v._v("尽量的把功能封装在函数中")])]),v._v(" "),_("p",[v._v("但是，当函数成为一个表达式时，它既不会提升，也不会污染全局对象。")]),v._v(" "),_("p",[v._v("将函数变为一个函数表达式的方式之一，将函数用小括号括起来。")]),v._v(" "),_("p",[v._v("然而，这样一来，函数无法通过名称调用。")]),v._v(" "),_("p",[v._v("如果书写一个函数表达式，然后将立即调用，该函数称之为立即执行函数 IIFE（Imdiately Invoked Function Expression）。")]),v._v(" "),_("p",[v._v("由于大部分情况下，函数表达式的函数名没有实际意义，因此，可以省略函数名。")]),v._v(" "),_("p",[v._v("没有名字的函数，称之为匿名函数")]),v._v(" "),_("h2",{attrs:{id:"作用域中可以使用的变量"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#作用域中可以使用的变量"}},[v._v("#")]),v._v(" 作用域中可以使用的变量")]),v._v(" "),_("p",[v._v("全局作用域只能使用全局作用域中声明的变量（包括函数）")]),v._v(" "),_("p",[v._v("函数作用域不仅能使用自身作用域中声明的变量（包括函数），还能使用外部环境的变量（包括函数）")]),v._v(" "),_("p",[v._v("有的时候，某个函数比较复杂，在编写的过程，可能需要另外一些函数来辅助它完成一些功能，而这些函数仅仅会被该函数使用，不会在其他位置使用，则可以将这些函数声明到该函数的内部。")]),v._v(" "),_("p",[v._v("函数内部声明的变量和外部冲突时，使用内部的。")]),v._v(" "),_("h2",{attrs:{id:"闭包"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[v._v("#")]),v._v(" 闭包")]),v._v(" "),_("p",[v._v("闭包（closure），是一种现象，内部函数，可以使用外部函数环境中的变量。")])])}),[],!1,null,null,null);_.default=a.exports}}]);