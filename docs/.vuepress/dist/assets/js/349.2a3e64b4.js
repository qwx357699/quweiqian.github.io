(window.webpackJsonp=window.webpackJsonp||[]).push([[349],{726:function(s,t,e){"use strict";e.r(t);var a=e(10),r=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"更多配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更多配置"}},[s._v("#")]),s._v(" 更多配置")]),s._v(" "),t("p",[s._v("所有配置参考："),t("a",{attrs:{href:"https://cli.vuejs.org/zh/config/##%E5%85%A8%E5%B1%80-cli-%E9%85%8D%E7%BD%AE",target:"_blank",rel:"noopener noreferrer"}},[s._v("vue-cli 配置"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"vue-config-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-config-js"}},[s._v("#")]),s._v(" vue.config.js")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("devServer")])]),s._v(" "),t("li",[t("p",[s._v("publicPath")])]),s._v(" "),t("li",[t("p",[s._v("outputDir")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("runtimeCompiler")]),s._v("  设为 true，带上编译部分代码，打包体积增加10kb左右s")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("transpileDependencies")]),s._v(":打包时默认 "),t("code",[s._v("babel")]),s._v(" 忽略 "),t("code",[s._v("node_modules")]),s._v(" 降级处理，如果有第三方库需要处理添加到数组配置 例如："),t("code",[s._v('transpileDependencies:["axios"]')])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("configureWebpack")]),s._v(" 自定义 webpack 配置，需要直接用一个对象。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("css.requireModuleExtension")])]),s._v(" "),t("p",[s._v("默认情况下，只有 "),t("code",[s._v("*.module.[ext]")]),s._v(" 结尾的文件才会被视作 CSS Modules 模块。设置为 "),t("code",[s._v("false")]),s._v(" 后你就可以去掉文件名中的 "),t("code",[s._v(".module")]),s._v(" 并将所有的 "),t("code",[s._v("*.(css|scss|sass|less|styl(us)?)")]),s._v(" 文件视为 CSS Modules 模块。")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("css")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("requireModuleExtension")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])])]),s._v(" "),t("h3",{attrs:{id:"node-base"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-base"}},[s._v("#")]),s._v(" NODE_BASE")]),s._v(" "),t("p",[s._v("上一节中提到"),t("code",[s._v("vue-cli")]),s._v("打包时，将 环境变量"),t("code",[s._v("NODE_ENV")]),s._v("、"),t("code",[s._v("BASE_URL")]),s._v("、"),t("code",[s._v("VUE_APP_XXX")]),s._v(" 全部进行替换。")]),s._v(" "),t("p",[s._v("其中 "),t("code",[s._v("BASE_URL")]),s._v(" 是什么意思呢？和其他两类有点不同，具体先看场景。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("想要 "),t("code",[s._v("my-site")]),s._v(" 项目打包部署后，访问首页的链接："),t("code",[s._v("http://qwq9527.gitee.io/my-blog")]),s._v("，但是默认打包后，url 都是绝对路径"),t("code",[s._v('<link href="/css/app.6882e1f5.css" rel="stylesheet"/>')]),s._v("，访问认不到，怎么办？")])]),s._v(" "),t("li",[t("p",[s._v("在 "),t("code",[s._v("vue.config.js")]),s._v(" 中配置 "),t("code",[s._v('publicPath:"/my-blog"')]),s._v("。这样打包后路径的问题解决了。"),t("code",[s._v('<link href="/my-blog/css/app.6882e1f5.css" rel="stylesheet" />')]),s._v("，但是一个新的问题来了。访问首页进入 404 页面。因为路由不识别"),t("code",[s._v("/my-blog")]),s._v("。怎么办？")])]),s._v(" "),t("li",[t("p",[s._v("可以给每个路由的"),t("code",[s._v("path")]),s._v(" 值加上  "),t("code",[s._v("/my-blog/")]),s._v("，但是不够灵活，改动多。怎么办？另一种法子是给创建 VueRouter 实例加上 "),t("code",[s._v("base")]),s._v(" 配置。")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" router "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VueRouter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  routes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("mode")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'history'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("base")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/my-blog"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("加完后，重新打包部署就正常了。但是"),t("code",[s._v("/my-blog")]),s._v("目录仍然要写两处，而且变更后两个地方都需要修改。怎么省去配置？")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("使用 "),t("code",[s._v("BASE_URL")]),s._v("，打包时，使用 "),t("code",[s._v("vue.config.js")]),s._v(" 中配置 "),t("code",[s._v("publicPath")]),s._v(" 的属性值进行替换。")])]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" router "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VueRouter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  routes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("mode")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'history'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("base")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" process"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("env"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("BASE_URL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])]),s._v(" "),t("h2",{attrs:{id:"babel配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#babel配置"}},[s._v("#")]),s._v(" babel配置")]),s._v(" "),t("p",[s._v("写到项目根目录下的"),t("code",[s._v("babel.config.js")]),s._v("中")]),s._v(" "),t("h2",{attrs:{id:"eslint"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#eslint"}},[s._v("#")]),s._v(" ESLint")]),s._v(" "),t("p",[s._v("ESLint 可以通过 "),t("code",[s._v(".eslintrc")]),s._v(" 或 "),t("code",[s._v("package.json")]),s._v(" 中的 "),t("code",[s._v("eslintConfig")]),s._v(" 字段来配置。")]),s._v(" "),t("h2",{attrs:{id:"postcss"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#postcss"}},[s._v("#")]),s._v(" postcss")]),s._v(" "),t("p",[s._v("写到"),t("code",[s._v("postcss.config.js")])])])}),[],!1,null,null,null);t.default=r.exports}}]);